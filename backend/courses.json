[
    {
        "coursename": "CSE 3 Personal Computer Concepts: Software and Hardware",
        "description": "Provides an introduction to computers. Personal computing is emphasized, and students are introduced to word processing, spreadsheets, database management, graphics, and programming. Covers fundamentals of computing and current and future uses of computer technology, PC hardware, Windows operating system, applications software, networking and the Internet, and developments in the computer industry. Designed for students with little or no experience using computers. Students cannot receive credit for this course and Computer Science 2. (Formerly Computer Engineering 3.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Gerald Moulds",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 3 Personal Computer Concepts: Software and Hardware\nProvides an introduction to computers. Personal computing is emphasized, and students are introduced to word processing, spreadsheets, database management, graphics, and programming. Covers fundamentals of computing and current and future uses of computer technology, PC hardware, Windows operating system, applications software, networking and the Internet, and developments in the computer industry. Designed for students with little or no experience using computers. Students cannot receive credit for this course and Computer Science 2. (Formerly Computer Engineering 3.)\nCredits 5\nInstructor Gerald Moulds\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 5J Introduction to Programming in Java",
        "description": "Introduces programming in Java for students who have no prior programming experience. Students learn programming and documentation skills, as well as algorithmic problem-solving, and programming methodologies. Introduces computers, compilers, and editors. Students write small to medium-sized programs. This course and CSE 5C and CSE 5P cover similar concepts, but use different programming languages. Because CSE 5J followed by CSE 11 is a two-quarter alternative to the accelerated course CSE 12A and CSE 12L, engineering majors and students planning on continuing the programming sequence are encouraged to take CSE 5J rather than CSE 5C or CSE 5P. Students may not receive credit for CSE 5J taken concurrently or subsequently to CSE 12A, CSE 12B, or Computer Engineering 13. (Formerly CMPS 5J.)",
        "genEd": "General Education Code MF",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 5J Introduction to Programming in Java\nIntroduces programming in Java for students who have no prior programming experience. Students learn programming and documentation skills, as well as algorithmic problem-solving, and programming methodologies. Introduces computers, compilers, and editors. Students write small to medium-sized programs. This course and CSE 5C and CSE 5P cover similar concepts, but use different programming languages. Because CSE 5J followed by CSE 11 is a two-quarter alternative to the accelerated course CSE 12A and CSE 12L, engineering majors and students planning on continuing the programming sequence are encouraged to take CSE 5J rather than CSE 5C or CSE 5P. Students may not receive credit for CSE 5J taken concurrently or subsequently to CSE 12A, CSE 12B, or Computer Engineering 13. (Formerly CMPS 5J.)\nCredits 5\nGeneral Education Code MF\n"
    },
    {
        "coursename": "CSE 10 Introduction to Computer Science",
        "description": "An overview of the theory, foundations, and practice of computer science with emphasis on what computers can and cannot do, now and in the future. Topics include algorithms and data, correctness and efficiency of algorithms, hardware, programming languages, limitations of computation, applications, and social issues. No programming skills are required as a prerequisite. Major concepts and open problems in computer science are presented without reliance on sophisticated mathematical tools. Students cannot receive credit for this course after completing CSE 15. (Formerly CMPS 10.)",
        "genEd": "General Education Code MF",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Patrick Tantalo, Marilyn Walker",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 10 Introduction to Computer Science\nAn overview of the theory, foundations, and practice of computer science with emphasis on what computers can and cannot do, now and in the future. Topics include algorithms and data, correctness and efficiency of algorithms, hardware, programming languages, limitations of computation, applications, and social issues. No programming skills are required as a prerequisite. Major concepts and open problems in computer science are presented without reliance on sophisticated mathematical tools. Students cannot receive credit for this course after completing CSE 15. (Formerly CMPS 10.)\nCredits 5\nInstructor The Staff, Patrick Tantalo, Marilyn Walker\nGeneral Education Code MF\n"
    },
    {
        "coursename": "CSE 12 Computer Systems and Assembly Language and Lab",
        "description": "Introduction to computer systems and assembly language and how computers compute in hardware and software. Topics include digital logic, number systems, data structures, compiling/assembly process, basics of the system software, and computer architecture. Course is 7 credits with integrated laboratories illustrating concepts covered in lecture. Note that CSE 12 assumes some programming experience. Students can show programming experience by taking one of the courses listed in the prerequisite list below or by taking the CSE python Test-out Exam: https://undergrad.soe.ucsc.edu/cse-20-testout-exam (Formerly CSE 12 and CSE 12L)",
        "genEd": "none",
        "credithours": "Credits 7",
        "instructor": "Instructor The Staff, Tracy Larrabee, Darrell Long, Jose Renau Ardevol, Matthew Guthaus, Max Dunne, Sagnik Nath",
        "extrarequirements": "Credits 7",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring, Summer",
        "fulldesc": "CSE 12 Computer Systems and Assembly Language and Lab\nIntroduction to computer systems and assembly language and how computers compute in hardware and software. Topics include digital logic, number systems, data structures, compiling/assembly process, basics of the system software, and computer architecture. Course is 7 credits with integrated laboratories illustrating concepts covered in lecture. Note that CSE 12 assumes some programming experience. Students can show programming experience by taking one of the courses listed in the prerequisite list below or by taking the CSE python Test-out Exam: https://undergrad.soe.ucsc.edu/cse-20-testout-exam (Formerly CSE 12 and CSE 12L)\nCredits 7\nInstructor The Staff, Tracy Larrabee, Darrell Long, Jose Renau Ardevol, Matthew Guthaus, Max Dunne, Sagnik Nath\nRequirements Prerequisite(s): CSE 5J, or CSE 20, or CSE 30, or BME 160, or equivalent.\nQuarter Offered Fall, Winter, Spring, Summer\n"
    },
    {
        "coursename": "CSE 13S Computer Systems and C Programming",
        "description": "Focuses on C programming, command line, shell programming, editors, debuggers, source code control, and other tools. Examines basic computer systems, algorithm design, and development, data types, and program structures. Develops understanding of process model, compile-link-execute build cycle, language-machine interface, memory, and data representation. Students cannot receive credit for both CSE 13S and CSE 13E. Course is 7 credits with integrated laboratory.",
        "genEd": "none",
        "credithours": "Credits 7",
        "instructor": "Instructor Darrell Long, Peter Alvaro, Faisal Nawab, Davis Harrison, Scott Brandt",
        "extrarequirements": "Credits 7",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 13S Computer Systems and C Programming\nFocuses on C programming, command line, shell programming, editors, debuggers, source code control, and other tools. Examines basic computer systems, algorithm design, and development, data types, and program structures. Develops understanding of process model, compile-link-execute build cycle, language-machine interface, memory, and data representation. Students cannot receive credit for both CSE 13S and CSE 13E. Course is 7 credits with integrated laboratory.\nCredits 7\nInstructor Darrell Long, Peter Alvaro, Faisal Nawab, Davis Harrison, Scott Brandt\nRequirements Prerequisite(s): CSE 12 or BME 160.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 16 Applied Discrete Mathematics",
        "description": "Introduction to applications of discrete mathematical systems. Topics include sets, functions, relations, graphs, predicate calculus, mathematical proof methods (induction, contraposition, contradiction), counting methods (permutations, combinations), and recurrences. Examples are drawn from computer science and computer engineering. Knowledge of computer programming is useful before taking this course. Students who do not have prior programming experience are strongly recommended to take CSE 20 or CSE 30 before taking this course.",
        "genEd": "General Education Code MF",
        "credithours": "Credits 5",
        "instructor": "Instructor Tracy Larrabee, Martine Schlag, Owen Arden, Chen Qian, Alvaro Cardenas, Allen Van Gelder, John Musacchio, The Staff",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 16 Applied Discrete Mathematics\nIntroduction to applications of discrete mathematical systems. Topics include sets, functions, relations, graphs, predicate calculus, mathematical proof methods (induction, contraposition, contradiction), counting methods (permutations, combinations), and recurrences. Examples are drawn from computer science and computer engineering. Knowledge of computer programming is useful before taking this course. Students who do not have prior programming experience are strongly recommended to take CSE 20 or CSE 30 before taking this course.\nCredits 5\nInstructor Tracy Larrabee, Martine Schlag, Owen Arden, Chen Qian, Alvaro Cardenas, Allen Van Gelder, John Musacchio, The Staff\nRequirements Prerequisite(s): MATH 19A or MATH 19B or MATH 11B or AM 11B or AM 15B or ECON 11B.\nGeneral Education Code MF\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 20 Beginning Programming in Python",
        "description": "Provides students with Python programming skills and the ability to design programs and read Python code. Topics include data types, control flow, methods and advanced functions, built-in data structures, and introduction to OOP. No prior programming experience is required. Students may not receive credit for CSE 20 after receiving credit for CSE 30. Students with prior programming experience (especially in Python) are encouraged to take CSE Testout Exam to be evaluated for their readiness to take CSE 30 directly: https://undergrad.soe.ucsc.edu/cse-20-testout-exam.",
        "genEd": "General Education Code MF",
        "credithours": "Credits 5",
        "instructor": "Instructor Cormac Flanagan, Narges Norouzi, Tracy Larrabee, Larissa Munishkina, Patrick Tantalo, Benedict Paten, Marilyn Walker, The Staff",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 20 Beginning Programming in Python\nProvides students with Python programming skills and the ability to design programs and read Python code. Topics include data types, control flow, methods and advanced functions, built-in data structures, and introduction to OOP. No prior programming experience is required. Students may not receive credit for CSE 20 after receiving credit for CSE 30. Students with prior programming experience (especially in Python) are encouraged to take CSE Testout Exam to be evaluated for their readiness to take CSE 30 directly: https://undergrad.soe.ucsc.edu/cse-20-testout-exam.\nCredits 5\nInstructor Cormac Flanagan, Narges Norouzi, Tracy Larrabee, Larissa Munishkina, Patrick Tantalo, Benedict Paten, Marilyn Walker, The Staff\nGeneral Education Code MF\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 30 Programming Abstractions: Python",
        "description": "Introduction to software development in Python focusing on structuring software in terms of objects endowed with primitive operations. Introduces concepts and techniques via a sequence of concrete case studies. Coursework consists of programming assignments and a final examination. Note that CSE 30 assumes some Python experience, students trained in a different language should self-study Python to prepare for CSE 30. See CSE Testout Exam for resources and further information.",
        "genEd": "none",
        "credithours": "Credits 7",
        "instructor": "Instructor Luca De Alfaro, Peter Alvaro, Delbert Bailey, Lindsey Kuper, Alex Pang, Larissa Munishikina, The Staff",
        "extrarequirements": "Credits 7",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 30 Programming Abstractions: Python\nIntroduction to software development in Python focusing on structuring software in terms of objects endowed with primitive operations. Introduces concepts and techniques via a sequence of concrete case studies. Coursework consists of programming assignments and a final examination. Note that CSE 30 assumes some Python experience, students trained in a different language should self-study Python to prepare for CSE 30. See CSE Testout Exam for resources and further information.\nCredits 7\nInstructor Luca De Alfaro, Peter Alvaro, Delbert Bailey, Lindsey Kuper, Alex Pang, Larissa Munishikina, The Staff\nRequirements Prerequisite(s): CSE 20 or BME 160; and MATH 3 or MATH 11A or MATH 19A or AM 3 or AM 11A or ECON 11A, or a score of 400 or higher on the mathematics placement examination (MPE).\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 40 Machine Learning Basics: Data Analysis and Empirical Methods",
        "description": "Introduction to the basic mathematical concepts and programming abstractions required for modern machine learning, data science, and empirical science. The mathematical foundations include basic probability, linear algebra, and optimization. The programming abstractions include data manipulation and visualization. The principles of empirical analysis, evaluation, critique and reproducibility are emphasized. Mathematical and programming abstractions are grounded in empirical studies including data-driven evidential reasoning, predictive modeling, and causal analysis.",
        "genEd": "General Education Code SR",
        "credithours": "Credits 5",
        "instructor": "Instructor Lise Getoor, The Staff",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 40 Machine Learning Basics: Data Analysis and Empirical Methods\nIntroduction to the basic mathematical concepts and programming abstractions required for modern machine learning, data science, and empirical science. The mathematical foundations include basic probability, linear algebra, and optimization. The programming abstractions include data manipulation and visualization. The principles of empirical analysis, evaluation, critique and reproducibility are emphasized. Mathematical and programming abstractions are grounded in empirical studies including data-driven evidential reasoning, predictive modeling, and causal analysis.\nCredits 5\nInstructor Lise Getoor, The Staff\nRequirements Prerequisite(s): MATH 19B or MATH 20B, and CSE 30.\nGeneral Education Code SR\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 80A Universal Access: Disability, Technology, and Society",
        "description": "Overview of human-centered technology and of its potential for increasing the quality of life and independence of disabled individuals. A substantial portion of the course is devoted to studying physical, psychological, and psychosocial aspects of disability. Topics include: diversity and integration, legislation, accessibility, and universal design. (Formerly Computer Engineering 80A.)",
        "genEd": "General Education Code PE-T",
        "credithours": "Credits 5",
        "instructor": "Instructor Roberto Manduchi, Sri Kurniawan",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 80A Universal Access: Disability, Technology, and Society\nOverview of human-centered technology and of its potential for increasing the quality of life and independence of disabled individuals. A substantial portion of the course is devoted to studying physical, psychological, and psychosocial aspects of disability. Topics include: diversity and integration, legislation, accessibility, and universal design. (Formerly Computer Engineering 80A.)\nCredits 5\nInstructor Roberto Manduchi, Sri Kurniawan\nGeneral Education Code PE-T\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 80L Social Data Analytics and Visualization",
        "description": "Course examines: social data analytics--veracity, consistency, uncertainty, volume; statistical computation--misuse, bias, dispersion, correlation, regressions, differential scales, normal distributions, factor and cluster analysis, extrapolation, inference, simple programming; visual representations--communication, critique and design of infographics; applications--environment, energy, economics, education, empowerment. (Formerly Computer Science 80L.)",
        "genEd": "General Education Code SR",
        "credithours": "Credits 5",
        "instructor": "Instructor Suresh Lodha",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 80L Social Data Analytics and Visualization\nCourse examines: social data analytics--veracity, consistency, uncertainty, volume; statistical computation--misuse, bias, dispersion, correlation, regressions, differential scales, normal distributions, factor and cluster analysis, extrapolation, inference, simple programming; visual representations--communication, critique and design of infographics; applications--environment, energy, economics, education, empowerment. (Formerly Computer Science 80L.)\nCredits 5\nInstructor Suresh Lodha\nGeneral Education Code SR\n"
    },
    {
        "coursename": "CSE 80N Introduction to Networking and the Internet",
        "description": "Introduction to the evolution, technological basis, and services of the Internet, with descriptions of its underlying communications structure, routing algorithms, peer-to-peer hierarchy, reliability, and packet switching. Network security, mail, multimedia and data compression issues, HTML, and digital images. Students who have completed CSE 150 cannot receive credit for this course. (Formerly Computer Engineering 80N.)",
        "genEd": "General Education Code PE-T",
        "credithours": "Credits 5",
        "instructor": "Instructor Chris Parsa, Tracy Larrabee, Patrick Mantey, Chen Qian",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 80N Introduction to Networking and the Internet\nIntroduction to the evolution, technological basis, and services of the Internet, with descriptions of its underlying communications structure, routing algorithms, peer-to-peer hierarchy, reliability, and packet switching. Network security, mail, multimedia and data compression issues, HTML, and digital images. Students who have completed CSE 150 cannot receive credit for this course. (Formerly Computer Engineering 80N.)\nCredits 5\nInstructor Chris Parsa, Tracy Larrabee, Patrick Mantey, Chen Qian\nGeneral Education Code PE-T\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 80S Social Networks",
        "description": "Introduction to social networks and game theory. Topics include the structure of social networks; the world wide web; the flow of information and behavior through networks; and the principles behind modern web search and search-ad placement. (Formerly Computer Science 17.)",
        "genEd": "General Education Code SR",
        "credithours": "Credits 5",
        "instructor": "Instructor Phokion Kolaitis, Lise Getoor",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 80S Social Networks\nIntroduction to social networks and game theory. Topics include the structure of social networks; the world wide web; the flow of information and behavior through networks; and the principles behind modern web search and search-ad placement. (Formerly Computer Science 17.)\nCredits 5\nInstructor Phokion Kolaitis, Lise Getoor\nRequirements Prerequisite(s): MATH 3 or MATH 11A; or AM 3 or AM 6 or AM 11A or AM 15A; or ECON 11A; or score on math placement exam of 300 or higher.\nGeneral Education Code SR\n"
    },
    {
        "coursename": "CSE 94 Group Tutorial",
        "description": "Provides a means for a small group of students to study a particular topic in consultation with a faculty sponsor. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 94 Group Tutorial\nProvides a means for a small group of students to study a particular topic in consultation with a faculty sponsor. Students submit petition to sponsoring agency.\nCredits 5\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 94F Group Tutorial",
        "description": "Provides a means for a small group of students to study a particular topic in consultation with a faculty sponsor. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 94F Group Tutorial\nProvides a means for a small group of students to study a particular topic in consultation with a faculty sponsor. Students submit petition to sponsoring agency.\nCredits 2\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 99 Tutorial",
        "description": "Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 99 Tutorial\nStudents submit petition to sponsoring agency.\nCredits 5\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 99F Tutorial",
        "description": "Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 99F Tutorial\nStudents submit petition to sponsoring agency.\nCredits 2\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 100 Logic Design",
        "description": "Boolean algebra, logic minimization, finite-state machine design, sequential circuits, common logic elements, programmable logic devices, and an introduction to system level design. The electrical behavior of circuits including three state outputs, propagation delay, logic levels, and fanout.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Scott Beamer, Martine Schlag, Sagnik Nath",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 100 Logic Design\nBoolean algebra, logic minimization, finite-state machine design, sequential circuits, common logic elements, programmable logic devices, and an introduction to system level design. The electrical behavior of circuits including three state outputs, propagation delay, logic levels, and fanout.\nCredits 5\nInstructor Scott Beamer, Martine Schlag, Sagnik Nath\nRequirements Prerequisite(s): CSE 12; previous or concurrent enrollment in CSE 100L is required.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 100L Logic Design Laboratory",
        "description": "Laboratory sequence illustrating topics covered in course 100. Two 2-hour laboratory sessions per week. Weekly laboratory assignments which require the use of the oscilloscopes, TTL circuits, computer-aided design and simulation tools, and programmable logic.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Scott Beamer, Martine Schlag, Sagnik Nath",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 100L Logic Design Laboratory\nLaboratory sequence illustrating topics covered in course 100. Two 2-hour laboratory sessions per week. Weekly laboratory assignments which require the use of the oscilloscopes, TTL circuits, computer-aided design and simulation tools, and programmable logic.\nCredits 2\nInstructor Scott Beamer, Martine Schlag, Sagnik Nath\nRequirements Prerequisite(s): CSE 12; previous or concurrent enrollment in CSE 100 is required.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 101 Introduction to Data Structures and Algorithms",
        "description": "Introduction to abstract data types and basics of algorithms. Linked lists, stacks, queues, hash tables, trees, heaps, and graphs will be covered. Students will also be taught how to derive big-Oh analysis of simple algorithms. All assignments will be in C/C++. (Formerly Computer Science 101 Algorithms and Abstract Data Types.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Ioannis Demertzis, Patrick Tantalo, Manfred Warmuth, Allen Van Gelder, David Helmbold, Seshadhri Comandur, James Davis, Alex Pang",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 101 Introduction to Data Structures and Algorithms\nIntroduction to abstract data types and basics of algorithms. Linked lists, stacks, queues, hash tables, trees, heaps, and graphs will be covered. Students will also be taught how to derive big-Oh analysis of simple algorithms. All assignments will be in C/C++. (Formerly Computer Science 101 Algorithms and Abstract Data Types.)\nCredits 5\nInstructor Ioannis Demertzis, Patrick Tantalo, Manfred Warmuth, Allen Van Gelder, David Helmbold, Seshadhri Comandur, James Davis, Alex Pang\nRequirements Prerequisite(s): CSE 12 or BME 160; CSE 13E or ECE 13 or CSE 13S; and CSE 16; and CSE 30; and MATH 11B or MATH 19B or MATH 20B or AM 11B.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 102 Introduction to Analysis of Algorithms",
        "description": "Methods for the systematic construction and mathematical analysis of algorithms. Order notation, the RAM model of computation, lower bounds, and recurrence relations are covered. The algorithm design techniques include divide-and-conquer, branch and bound, and dynamic programming. Applications to combinatorial, graph, string, and geometric algorithms. (Formerly Computer Science 102.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Kolla, Manfred Warmuth, Allen Van Gelder, Suresh Lodha, David Helmbold, Daniel Fremont, Abhradeep Guha Thakurta",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 102 Introduction to Analysis of Algorithms\nMethods for the systematic construction and mathematical analysis of algorithms. Order notation, the RAM model of computation, lower bounds, and recurrence relations are covered. The algorithm design techniques include divide-and-conquer, branch and bound, and dynamic programming. Applications to combinatorial, graph, string, and geometric algorithms. (Formerly Computer Science 102.)\nCredits 5\nInstructor Kolla, Manfred Warmuth, Allen Van Gelder, Suresh Lodha, David Helmbold, Daniel Fremont, Abhradeep Guha Thakurta\nRequirements Prerequisite(s): CSE 101.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 103 Computational Models",
        "description": "Various representations for regular languages, context-free grammars, normal forms, simple parsing, pumping lemmas, Turing machines, the Church-Turing thesis, intractable problems, the P-NP question. (Formerly CMPS 130.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Delbert Bailey, Patrick Tantalo, Manfred Warmuth, Allen Van Gelder, Phokion Kolaitis, David Helmbold, Seshadhri Comandur",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 103 Computational Models\nVarious representations for regular languages, context-free grammars, normal forms, simple parsing, pumping lemmas, Turing machines, the Church-Turing thesis, intractable problems, the P-NP question. (Formerly CMPS 130.)\nCredits 5\nInstructor Delbert Bailey, Patrick Tantalo, Manfred Warmuth, Allen Van Gelder, Phokion Kolaitis, David Helmbold, Seshadhri Comandur\nRequirements Prerequisite(s): CSE 101.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 104 Computability and Computational Complexity",
        "description": "Turing machines, general phase-structure grammars, the Chomsky hierarchy, recursive functions, diagonalization, the Halting problem, computability and unsolvability, computational complexity, time and space bounds, NP-completeness with emphasis on reductions between problems from various areas. (Formerly CMPS 132.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Delbert Bailey, Manfred Warmuth, Allen Van Gelder, Phokion Kolaitis, David Helmbold",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 104 Computability and Computational Complexity\nTuring machines, general phase-structure grammars, the Chomsky hierarchy, recursive functions, diagonalization, the Halting problem, computability and unsolvability, computational complexity, time and space bounds, NP-completeness with emphasis on reductions between problems from various areas. (Formerly CMPS 132.)\nCredits 5\nInstructor Delbert Bailey, Manfred Warmuth, Allen Van Gelder, Phokion Kolaitis, David Helmbold\nRequirements Prerequisite(s): CSE 103.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 106 Applied Graph Theory and Algorithms",
        "description": "Basic concepts and algorithms are reviewed including trees, Eulerian and Hamiltonian graphs, and graph transversal. Algorithms are explored to solve problems in connectivity, routing, matching, and embedding of graphs. Graph theory and algorithms are developed around applications in computer engineering. (Formerly Computer Engineering 177.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Martine Schlag, Patrick Tantalo",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 106 Applied Graph Theory and Algorithms\nBasic concepts and algorithms are reviewed including trees, Eulerian and Hamiltonian graphs, and graph transversal. Algorithms are explored to solve problems in connectivity, routing, matching, and embedding of graphs. Graph theory and algorithms are developed around applications in computer engineering. (Formerly Computer Engineering 177.)\nCredits 5\nInstructor Martine Schlag, Patrick Tantalo\nRequirements Prerequisite(s): CSE 101.\n"
    },
    {
        "coursename": "CSE 107 Probability and Statistics for Engineers",
        "description": "Introduction to fundamental tools of stochastic analysis. Probability, conditional probability; Bayes Theorem; random variables and transforms; independence; Bernnoulli trials. Statistics, inference from limited data; outcomes of repeated experiments; applications to design; assessment of relative frequency and probability; law of large numbers; precision of measurements. Elements of stochastic processes, Poisson processes; Markov chains. Students cannot receive credit for this course and Applied Mathematics and Statistics 131. (Formerly Computer Engineering 107.)",
        "genEd": "General Education Code SR",
        "credithours": "Credits 5",
        "instructor": "Instructor Jose Garcia-Luna-Aceves, Mircea Teodorescu, John Musacchio, Chen Qian, Patrick Tantalo",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 107 Probability and Statistics for Engineers\nIntroduction to fundamental tools of stochastic analysis. Probability, conditional probability; Bayes Theorem; random variables and transforms; independence; Bernnoulli trials. Statistics, inference from limited data; outcomes of repeated experiments; applications to design; assessment of relative frequency and probability; law of large numbers; precision of measurements. Elements of stochastic processes, Poisson processes; Markov chains. Students cannot receive credit for this course and Applied Mathematics and Statistics 131. (Formerly Computer Engineering 107.)\nCredits 5\nInstructor Jose Garcia-Luna-Aceves, Mircea Teodorescu, John Musacchio, Chen Qian, Patrick Tantalo\nRequirements Prerequisite(s): CSE 16; and AM 30 or MATH 22 or MATH 23A.\nGeneral Education Code SR\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 108 Algorithmic Foundations of Cryptography",
        "description": "Focuses on some of the foundational aspects of modern cryptography, namely, private and public key cryptography, digital signatures, pseudorandom generators and functions, message authentication codes, hash functions, and random oracles. Course also connects the formal concepts with some real-world applications, like RA, SSL, and bitcoin, exposing students to general concepts of probability theory, number theory, and rigorous proofs. (Formerly Computer Science 118.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Abhradeep Guha Thakurta, Ioannis Demertzis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 108 Algorithmic Foundations of Cryptography\nFocuses on some of the foundational aspects of modern cryptography, namely, private and public key cryptography, digital signatures, pseudorandom generators and functions, message authentication codes, hash functions, and random oracles. Course also connects the formal concepts with some real-world applications, like RA, SSL, and bitcoin, exposing students to general concepts of probability theory, number theory, and rigorous proofs. (Formerly Computer Science 118.)\nCredits 5\nInstructor Abhradeep Guha Thakurta, Ioannis Demertzis\nRequirements Prerequisite(s): CSE 101. Enrollment restricted to computer engineering and computer science majors.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 110A Fundamentals of Compiler Design I",
        "description": "An introduction to the basic techniques used in compiler design. Topics include compiler structure, symbol tables, regular expressions and languages, finite automata, lexical analysis, context-free languages, LL(1), recursive descent, LALR(1), and LR(1) parsing; and attribute grammars as a model of syntax-directed translation. Students use compiler building tools to construct a working compiler. (Formerly Computer Science 104A.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Wesley Mackey, Owen Arden, TylerSorensen Sorensen",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter, Spring",
        "fulldesc": "CSE 110A Fundamentals of Compiler Design I\nAn introduction to the basic techniques used in compiler design. Topics include compiler structure, symbol tables, regular expressions and languages, finite automata, lexical analysis, context-free languages, LL(1), recursive descent, LALR(1), and LR(1) parsing; and attribute grammars as a model of syntax-directed translation. Students use compiler building tools to construct a working compiler. (Formerly Computer Science 104A.)\nCredits 5\nInstructor Wesley Mackey, Owen Arden, TylerSorensen Sorensen\nRequirements Prerequisite(s): CSE 12 and CSE 101.\nQuarter Offered Winter, Spring\n"
    },
    {
        "coursename": "CSE 110B Fundamentals of Compiler Design II",
        "description": "Advanced study of compiler implementation. Topics include compiler structure back end, run-time environments, storage management, garbage collection, register allocation, code generation, basic blocks, control flow, data flow, local and global optimization, interpretation, and machine-code generation. Students may not receive credit for this course and CSE 211. Taught in conjunction with CSE 211. (Formerly Computer Science 104B.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Wesley Mackey",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 110B Fundamentals of Compiler Design II\nAdvanced study of compiler implementation. Topics include compiler structure back end, run-time environments, storage management, garbage collection, register allocation, code generation, basic blocks, control flow, data flow, local and global optimization, interpretation, and machine-code generation. Students may not receive credit for this course and CSE 211. Taught in conjunction with CSE 211. (Formerly Computer Science 104B.)\nCredits 5\nInstructor Wesley Mackey\nRequirements Prerequisite(s): CSE 110A.\n"
    },
    {
        "coursename": "CSE 111 Advanced Programming",
        "description": "An introduction to object-oriented techniques of software development including data abstraction, inheritance, polymorphism, and object-oriented design. Extensive practice using a computer to solve problems, including construction of graphical user interfaces and a multithreaded client/server applications.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Wesley Mackey, David Harrison",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 111 Advanced Programming\nAn introduction to object-oriented techniques of software development including data abstraction, inheritance, polymorphism, and object-oriented design. Extensive practice using a computer to solve problems, including construction of graphical user interfaces and a multithreaded client/server applications.\nCredits 5\nInstructor The Staff, Wesley Mackey, David Harrison\nRequirements Prerequisite(s): CSE 15 and CSE 15L; or CSE 13S and CMPM 35; or CSE 13E and CMPM 35; or ECE 13 and CMPM 35; or CSE 101.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 112 Comparative Programming Languages",
        "description": "Covers several programming languages and compares styles, philosophy, and design principles. Principles underlying declarative, functional, and object-oriented programming styles are studied. Students write programs emphasizing each of these techniques. (Formerly Computer Science 112.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor W. Mackey, D. Long, C. Flanagan, A. Van Gelder, O. Arden, D. Harrison",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 112 Comparative Programming Languages\nCovers several programming languages and compares styles, philosophy, and design principles. Principles underlying declarative, functional, and object-oriented programming styles are studied. Students write programs emphasizing each of these techniques. (Formerly Computer Science 112.)\nCredits 5\nInstructor W. Mackey, D. Long, C. Flanagan, A. Van Gelder, O. Arden, D. Harrison\nRequirements Prerequisite(s): CSE 101.\n"
    },
    {
        "coursename": "CSE 113 Parallel and Concurrent Programming",
        "description": "Introduction to parallel and concurrent programming. Topics include: types of parallel computers and programming platforms; design, implementation, and optimization of programs for parallel and multicore processors; basic and advanced programming techniques; performance analysis and load balancing; and selected parallel algorithms.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Tyler Sorensen",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 113 Parallel and Concurrent Programming\nIntroduction to parallel and concurrent programming. Topics include: types of parallel computers and programming platforms; design, implementation, and optimization of programs for parallel and multicore processors; basic and advanced programming techniques; performance analysis and load balancing; and selected parallel algorithms.\nCredits 5\nInstructor Tyler Sorensen\nRequirements Prerequisite(s): CSE 12 and CSE 101. CSE 120 recommended.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 114A Foundations of Programming Languages",
        "description": "Problem solving emphasizing recursion, data abstraction, and higher-order functions. Introduction to types and type checking, modular programming, and reasoning about program correctness. (Formerly CSE 116, Introduction to Functional Programming.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Owen Arden, Lindsey Kuper, Cormac Flanagan",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 114A Foundations of Programming Languages\nProblem solving emphasizing recursion, data abstraction, and higher-order functions. Introduction to types and type checking, modular programming, and reasoning about program correctness. (Formerly CSE 116, Introduction to Functional Programming.)\nCredits 5\nInstructor Owen Arden, Lindsey Kuper, Cormac Flanagan\nRequirements Prerequisite(s): CSE 101.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 114B Functional Programming",
        "description": "An in-depth study of the functional style of programming and functional abstraction, including the study of applicative functors and monads, and monadic parsers. (Formerly CSE 114.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Cormac Flanagan",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 114B Functional Programming\nAn in-depth study of the functional style of programming and functional abstraction, including the study of applicative functors and monads, and monadic parsers. (Formerly CSE 114.)\nCredits 5\nInstructor Cormac Flanagan\nRequirements Prerequisite(s): CSE 114A. Enrollment is restricted to junior and senior computer science majors.\n"
    },
    {
        "coursename": "CSE 115A Introduction to Software Engineering",
        "description": "Emphasizes the characteristics of well-engineered software systems. Topics include requirements analysis and specification, design, programming, verification and validation, maintenance, and project management. Practical and research methods are studied. Imparts an understanding of the steps used to effectively develop computer software. (Formerly Computer Science 115.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Jim Whitehead, Cormac Flanagan, Linda Werner, Richard Jullig, Narges Norouzi",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 115A Introduction to Software Engineering\nEmphasizes the characteristics of well-engineered software systems. Topics include requirements analysis and specification, design, programming, verification and validation, maintenance, and project management. Practical and research methods are studied. Imparts an understanding of the steps used to effectively develop computer software. (Formerly Computer Science 115.)\nCredits 5\nInstructor The Staff, Jim Whitehead, Cormac Flanagan, Linda Werner, Richard Jullig, Narges Norouzi\nRequirements Prerequisite(s): satisfaction of the Entry Level Writing and Composition requirements and CSE 101 and CSE 130.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 115B Software Design Project",
        "description": "Students in teams specify, design, construct, test, and document a complete software system in a specialized application domain. Class time is spent in technical discussions and ongoing design reviews. A formal presentation and demonstration of each project is required. An organizational meeting will be held during the preceding quarter. Projects may be drawn from industry and campus research groups. (Formerly Computer Science 116.)",
        "genEd": "General Education Code PR-E",
        "credithours": "Credits 5",
        "instructor": "Instructor Jim Whitehead, Luca De Alfaro, Linda Werner, Richard Jullig",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 115B Software Design Project\nStudents in teams specify, design, construct, test, and document a complete software system in a specialized application domain. Class time is spent in technical discussions and ongoing design reviews. A formal presentation and demonstration of each project is required. An organizational meeting will be held during the preceding quarter. Projects may be drawn from industry and campus research groups. (Formerly Computer Science 116.)\nCredits 5\nInstructor Jim Whitehead, Luca De Alfaro, Linda Werner, Richard Jullig\nRequirements Prerequisite(s): CSE 115A.\nGeneral Education Code PR-E\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 115C Software Design Project II",
        "description": "Continuation of CSE 116. Students work in teams to develop, test, document, and deploy a substantial software project. Teams give a formal presentation and demonstration of each project. (Formerly Computer Science 117.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Jim Whitehead, Luca De Alfaro, Linda Werner, Richard Jullig",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 115C Software Design Project II\nContinuation of CSE 116. Students work in teams to develop, test, document, and deploy a substantial software project. Teams give a formal presentation and demonstration of each project. (Formerly Computer Science 117.)\nCredits 5\nInstructor The Staff, Jim Whitehead, Luca De Alfaro, Linda Werner, Richard Jullig\nRequirements Prerequisite(s): CSE 115B.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 115D Software Design Project - Accelerated",
        "description": "Accelerated version of CSE 115B and CSE 115C. Students work in teams to develop, test, document and deploy a substantial software project. Each team gives a formal presentation and demonstration of their project. Students cannot receive credit for both CSE 115D and any part of the 115B-115C sequence.",
        "genEd": "General Education Code PR-E",
        "credithours": "Credits 5",
        "instructor": "Instructor Richard Jullig",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 115D Software Design Project - Accelerated\nAccelerated version of CSE 115B and CSE 115C. Students work in teams to develop, test, document and deploy a substantial software project. Each team gives a formal presentation and demonstration of their project. Students cannot receive credit for both CSE 115D and any part of the 115B-115C sequence.\nCredits 5\nInstructor Richard Jullig\nRequirements Prerequisite(s): CSE 115A.\nGeneral Education Code PR-E\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 117 Open Source Programming",
        "description": "Teaches the principles of open source software development. By participating in diverse projects, students experience the process of developing software in a distributed, community-centric environment. Students learn about the tools, processes, and soft skills that are essential in this context.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Carl Maltzahn",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 117 Open Source Programming\nTeaches the principles of open source software development. By participating in diverse projects, students experience the process of developing software in a distributed, community-centric environment. Students learn about the tools, processes, and soft skills that are essential in this context.\nCredits 5\nInstructor The Staff, Carl Maltzahn\nRequirements Prerequisite(s): CSE 101; and CSE 102 or CSE 111 or CSE 115A. Enrollment restricted to School of Engineering majors.\n"
    },
    {
        "coursename": "CSE 118 Mobile Applications",
        "description": "Introduces programming and application development for mobile devices. Covers the Android SDK and main programming platforms available on mobile devices, methodologies for developing native applications. Students build applications and learn about different Android application components such as Activities, Services, Broadcast Receivers, and Content Providers through course assignments. Course based on emulators and SDK tools, so ownership of a cell phone/tablet is not required for the course. (Formerly CMPS 121.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor David Harrison, Luca De Alfaro, Narges Norouzi",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 118 Mobile Applications\nIntroduces programming and application development for mobile devices. Covers the Android SDK and main programming platforms available on mobile devices, methodologies for developing native applications. Students build applications and learn about different Android application components such as Activities, Services, Broadcast Receivers, and Content Providers through course assignments. Course based on emulators and SDK tools, so ownership of a cell phone/tablet is not required for the course. (Formerly CMPS 121.)\nCredits 5\nInstructor David Harrison, Luca De Alfaro, Narges Norouzi\nRequirements Prerequisite(s): CSE 101.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 119 Software for Society",
        "description": "Provides experience with applying computing to social issues. Case studies on multiple issues. For example: privacy, copyright, voting, education, poverty, energy, activism. Team project in which students develop software to address a pre-identified need of a global or local non-profit. (Formerly Computer Science 119.)",
        "genEd": "General Education Code PE-T",
        "credithours": "Credits 5",
        "instructor": "Instructor Suresh Lodha, James Davis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 119 Software for Society\nProvides experience with applying computing to social issues. Case studies on multiple issues. For example: privacy, copyright, voting, education, poverty, energy, activism. Team project in which students develop software to address a pre-identified need of a global or local non-profit. (Formerly Computer Science 119.)\nCredits 5\nInstructor Suresh Lodha, James Davis\nRequirements Prerequisite(s): CSE 101.\nGeneral Education Code PE-T\n"
    },
    {
        "coursename": "CSE 120 Computer Architecture",
        "description": "Introduction to computer architecture including examples of current approaches and the effect of technology and software. Computer performance evaluation, basic combinatorial and sequential digital components, different instruction set architectures with a focus on the MIPS ISA and RISC paradigm. Evolution of CPU microarchitecture from single-cycle to multi-cycle pipelines, with overview of super-scalar, multiple-issue and VLIW. Memory system, cache, virtual memory and relationship between memory and performance. Evolution of PC system architecture. May include advanced topics, such as parallel processing, MIMD, and SIMD.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Scott Beamer, Ethan Miller, Jose Renau Ardevol, Heiner Litz, Sagnik Nath",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 120 Computer Architecture\nIntroduction to computer architecture including examples of current approaches and the effect of technology and software. Computer performance evaluation, basic combinatorial and sequential digital components, different instruction set architectures with a focus on the MIPS ISA and RISC paradigm. Evolution of CPU microarchitecture from single-cycle to multi-cycle pipelines, with overview of super-scalar, multiple-issue and VLIW. Memory system, cache, virtual memory and relationship between memory and performance. Evolution of PC system architecture. May include advanced topics, such as parallel processing, MIMD, and SIMD.\nCredits 5\nInstructor Scott Beamer, Ethan Miller, Jose Renau Ardevol, Heiner Litz, Sagnik Nath\nRequirements Prerequisite(s): CSE 12; and CSE 13E, or CSE 13S, or ECE 13, or CSE 15 and CSE 15L. CSE 16 recommended.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 121 Embedded System Design",
        "description": "The design and use of microprocessor-based embedded systems. Covers microprocessor and microcontroller architecture, programming techniques, bus and memory organization, DMA, timing issues, interrupts, peripheral devices, serial and parallel communication, and interfacing to analog and digital systems. (Formerly Microprocessor System Design, and formerly offered as two courses, CMPE 121 and CMPE 121L.)",
        "genEd": "none",
        "credithours": "Credits 7",
        "instructor": "Instructor Anujan Varma, David Harrison, Heiner Litz, Jose Renau",
        "extrarequirements": "Credits 7",
        "quarteroffered": "Quarter Offered Fall, Spring",
        "fulldesc": "CSE 121 Embedded System Design\nThe design and use of microprocessor-based embedded systems. Covers microprocessor and microcontroller architecture, programming techniques, bus and memory organization, DMA, timing issues, interrupts, peripheral devices, serial and parallel communication, and interfacing to analog and digital systems. (Formerly Microprocessor System Design, and formerly offered as two courses, CMPE 121 and CMPE 121L.)\nCredits 7\nInstructor Anujan Varma, David Harrison, Heiner Litz, Jose Renau\nRequirements Prerequisite(s): CSE 12, CSE 100, CSE 100L; and CSE 13E or CSE 13S or ECE 13 or CSE 15 and CSE 15L; and ECE 101, ECE 101L, PHYS 5C and PHYS 5N.\nQuarter Offered Fall, Spring\n"
    },
    {
        "coursename": "CSE 122 Introduction to VLSI Digital System Design",
        "description": "Introduces very large scale integrated (VLSI) custom integrated circuits. Topics include: semiconductor manufacturing, logic families, field-effect transistors (FETs), interconnect models, simulation, and circuits. Introduces the design flow from logic design to layout with a focus on high performance and low power. Students cannot receive credit for this course and CSE 222A. (Formerly Computer Engineering 122.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Matthew Guthaus",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 122 Introduction to VLSI Digital System Design\nIntroduces very large scale integrated (VLSI) custom integrated circuits. Topics include: semiconductor manufacturing, logic families, field-effect transistors (FETs), interconnect models, simulation, and circuits. Introduces the design flow from logic design to layout with a focus on high performance and low power. Students cannot receive credit for this course and CSE 222A. (Formerly Computer Engineering 122.)\nCredits 5\nInstructor Matthew Guthaus\nRequirements Prerequisite(s): CSE 100, CSE 100L, ECE 101, and ECE 101L.\n"
    },
    {
        "coursename": "CSE 123A Engineering Design Project I",
        "description": "First of a two-course sequence that is the culmination of the engineering program. Students apply knowledge and skills gained in elective track to complete a major design project. Students complete research, specification, planning, and procurement for a substantial project. Includes technical discussions, design reviews, and formal presentations; engineering design cycle, engineering teams, and professional practices. Formal technical specification of the approved project is presented to faculty.",
        "genEd": "General Education Code PR-E",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Anujan Varma, David Harrison",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 123A Engineering Design Project I\nFirst of a two-course sequence that is the culmination of the engineering program. Students apply knowledge and skills gained in elective track to complete a major design project. Students complete research, specification, planning, and procurement for a substantial project. Includes technical discussions, design reviews, and formal presentations; engineering design cycle, engineering teams, and professional practices. Formal technical specification of the approved project is presented to faculty.\nCredits 5\nInstructor The Staff, Anujan Varma, David Harrison\nRequirements Prerequisite(s): CSE 121; previous or concurrent enrollment in CSE 185E.\nGeneral Education Code PR-E\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 123B Engineering Design Project II",
        "description": "Second of two-course sequence in engineering system design. Students fully implement and test system designed and specified in CSE 123A. Formal written report, oral presentation, and demonstration of successful project to review panel of engineering faculty required.",
        "genEd": "none",
        "credithours": "Credits 7",
        "instructor": "Instructor The Staff, Anujan Varma, David Harrison",
        "extrarequirements": "Credits 7",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 123B Engineering Design Project II\nSecond of two-course sequence in engineering system design. Students fully implement and test system designed and specified in CSE 123A. Formal written report, oral presentation, and demonstration of successful project to review panel of engineering faculty required.\nCredits 7\nInstructor The Staff, Anujan Varma, David Harrison\nRequirements Prerequisite(s): CSE 123A, and CSE 185E or CSE 185S.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 125 Logic Design with Verilog",
        "description": "Verilog digital logic design with emphasis on ASIC and FPGA design. Students design and verify large-scale systems. Assignments and project use the Verilog Hardware Description Language with emphasis on verification and high-frequency ASIC/FPGA targets. May be taught in conjunction with CSE 225. Students cannot receive credit for both courses.",
        "genEd": "none",
        "credithours": "Credits 7",
        "instructor": "Instructor Jose Renau Ardevol, Matthew Guthaus, Heiner Litz",
        "extrarequirements": "Credits 7",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 125 Logic Design with Verilog\nVerilog digital logic design with emphasis on ASIC and FPGA design. Students design and verify large-scale systems. Assignments and project use the Verilog Hardware Description Language with emphasis on verification and high-frequency ASIC/FPGA targets. May be taught in conjunction with CSE 225. Students cannot receive credit for both courses.\nCredits 7\nInstructor Jose Renau Ardevol, Matthew Guthaus, Heiner Litz\nRequirements Prerequisite(s): CSE 100 and CSE 100L and CSE 120.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 129A Capstone Project I",
        "description": "First of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this first course, students complete the specification and planning for a substantial project. Topics covered: engineering design cycle, engineering teams, and professional practices. (Formerly Computer Engineering 129A.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Patrick Mantey, Gabriel Elkaim",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 129A Capstone Project I\nFirst of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this first course, students complete the specification and planning for a substantial project. Topics covered: engineering design cycle, engineering teams, and professional practices. (Formerly Computer Engineering 129A.)\nCredits 2\nInstructor Patrick Mantey, Gabriel Elkaim\nRequirements Prerequisite(s): previous or concurrent enrollment in courses CSE 121 and CSE 121L. Enrollment is restricted to bioengineering, biomolecular engineering and bioinformatics, computer engineering, and robotics engineering majors.\n"
    },
    {
        "coursename": "CSE 129B Capstone Project II",
        "description": "Second of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this second course, students complete the research and procurement for a substantial project and a preliminary implementation. Prerequisite(s): CSE 121, CSE 121L, and CSE 129A. Previous or concurrent enrollment in CSE 185. Enrollment by permission of instructor.",
        "genEd": "General Education Code PR-E",
        "credithours": "Credits 5",
        "instructor": "Instructor Patrick Mantey, Gabriel Elkaim",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 129B Capstone Project II\nSecond of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this second course, students complete the research and procurement for a substantial project and a preliminary implementation. Prerequisite(s): CSE 121, CSE 121L, and CSE 129A. Previous or concurrent enrollment in CSE 185. Enrollment by permission of instructor.\nCredits 5\nInstructor Patrick Mantey, Gabriel Elkaim\nGeneral Education Code PR-E\n"
    },
    {
        "coursename": "CSE 129C Capstone Project III",
        "description": "Third of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this third course, students work in teams to complete the project specified and advanced in the first two courses. A formal written report, oral presentation, and demonstration of the successful project to a review panel of engineering faculty is required. Prerequisite(s): CSE 129B and CSE 185. Enrollment by permission of instructor.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Patrick Mantey, Gabriel Elkaim",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 129C Capstone Project III\nThird of a three-course sequence in which students apply knowledge and skills gained in elective track to complete a major design project. In this third course, students work in teams to complete the project specified and advanced in the first two courses. A formal written report, oral presentation, and demonstration of the successful project to a review panel of engineering faculty is required. Prerequisite(s): CSE 129B and CSE 185. Enrollment by permission of instructor.\nCredits 5\nInstructor Patrick Mantey, Gabriel Elkaim\n"
    },
    {
        "coursename": "CSE 130 Principles of Computer Systems Design",
        "description": "Covers the principles governing computer-systems design and complexity; familiarity with memory, storage, and networking; concurrency and synchronization; layering (abstraction and modularity); naming; client-server and virtualized system models; and performance. Requires significant programming projects demonstrating mastery of these concepts.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Ethan Miller, Gabriel Elkaim, Faisal Nawab, Peter Alvaro, David Harrison, Andrew Quinn, Katia Obraczka",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 130 Principles of Computer Systems Design\nCovers the principles governing computer-systems design and complexity; familiarity with memory, storage, and networking; concurrency and synchronization; layering (abstraction and modularity); naming; client-server and virtualized system models; and performance. Requires significant programming projects demonstrating mastery of these concepts.\nCredits 5\nInstructor Ethan Miller, Gabriel Elkaim, Faisal Nawab, Peter Alvaro, David Harrison, Andrew Quinn, Katia Obraczka\nRequirements Prerequisite(s): CSE 12; and CSE 101, or CSE 15 and CSE 15L; and knowledge of C programming language.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 132 Computer Security",
        "description": "Introduction to computer security (including selected topics in network security). Access control. Security in programming languages. Basic cryptography. Security protocols. (Formerly CMPS 122.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Ethan Miller, Owen Arden, Alvaro Cardenas",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 132 Computer Security\nIntroduction to computer security (including selected topics in network security). Access control. Security in programming languages. Basic cryptography. Security protocols. (Formerly CMPS 122.)\nCredits 5\nInstructor Ethan Miller, Owen Arden, Alvaro Cardenas\nRequirements Prerequisite(s): CSE 130 or CSE 131 or permission of instructor. Enrollment restricted to School of Engineering majors.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 134 Embedded Operating Systems",
        "description": "Detailed exploration of the internal design of an embedded operating systems kernel. Covers kernel structure and organization, device drivers, I/O systems, file systems, memory management, and security. Students complete significant programming projects that extend or modify existing operating systems. (Formerly Computer Engineering 114.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Ethan Miller, Darrell Long, Andrew Quinn",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 134 Embedded Operating Systems\nDetailed exploration of the internal design of an embedded operating systems kernel. Covers kernel structure and organization, device drivers, I/O systems, file systems, memory management, and security. Students complete significant programming projects that extend or modify existing operating systems. (Formerly Computer Engineering 114.)\nCredits 5\nInstructor Ethan Miller, Darrell Long, Andrew Quinn\nRequirements Prerequisite(s): CSE 120 and CSE 130.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 138 Distributed Systems",
        "description": "Covers topics in distributed computing including communication, naming, synchronization, consistency and replication, fault tolerance, and security. Examples drawn from peer-to-peer systems, online gaming, the World Wide Web; other systems also used to illustrate approaches to these topics. Students implement simple distributed systems over the course of the quarter. (Formerly CMPS 128, Distributed Systems: File Sharing, Online Gaming, and More.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor L. Kuper, E. Miller, D. Long, P. Alvaro",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 138 Distributed Systems\nCovers topics in distributed computing including communication, naming, synchronization, consistency and replication, fault tolerance, and security. Examples drawn from peer-to-peer systems, online gaming, the World Wide Web; other systems also used to illustrate approaches to these topics. Students implement simple distributed systems over the course of the quarter. (Formerly CMPS 128, Distributed Systems: File Sharing, Online Gaming, and More.)\nCredits 5\nInstructor L. Kuper, E. Miller, D. Long, P. Alvaro\nRequirements Prerequisite(s): CSE 130 or CSE 131.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 140 Artificial Intelligence",
        "description": "Introduction to the contemporary concepts and techniques of artificial intelligence, including any or all of: machine perception and inference, machine learning, optimization problems, computational methods and models of search, game playing and theorem proving. Emphasis may be on any formal method of perceiving, learning, reasoning, and problem solving which proves to be effective. This includes both symbolic and neural network approaches to artificial intelligence. Issues discussed include symbolic versus nonsymbolic methods, local versus global methods, hierarchical organization and control, and brain modeling versus engineering approaches. Lisp or Prolog may be introduced. Involves one major project or regular programming assignments. (Formerly CMPS 140.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Narges Norouzi, Marilyn Walker, Lise Getoor, Yang Liu, Leilani Gilpin",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter, Spring",
        "fulldesc": "CSE 140 Artificial Intelligence\nIntroduction to the contemporary concepts and techniques of artificial intelligence, including any or all of: machine perception and inference, machine learning, optimization problems, computational methods and models of search, game playing and theorem proving. Emphasis may be on any formal method of perceiving, learning, reasoning, and problem solving which proves to be effective. This includes both symbolic and neural network approaches to artificial intelligence. Issues discussed include symbolic versus nonsymbolic methods, local versus global methods, hierarchical organization and control, and brain modeling versus engineering approaches. Lisp or Prolog may be introduced. Involves one major project or regular programming assignments. (Formerly CMPS 140.)\nCredits 5\nInstructor Narges Norouzi, Marilyn Walker, Lise Getoor, Yang Liu, Leilani Gilpin\nRequirements Prerequisite(s): CSE 101.\nQuarter Offered Winter, Spring\n"
    },
    {
        "coursename": "CSE 142 Machine Learning",
        "description": "Introduction to machine learning algorithms and their applications. Topics include classification learning, density estimation and Bayesian learning regression, and online learning. Provides introduction to standard learning methods such as neural networks, decision trees, boosting, and nearest neighbor techniques. (Formerly CMPS 142.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Manfred Warmuth, David Helmbold, Snigdha Chaturvedi, Yang Liu, Xin \"Eric\" Wang, Evangelos Chatzisfratis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 142 Machine Learning\nIntroduction to machine learning algorithms and their applications. Topics include classification learning, density estimation and Bayesian learning regression, and online learning. Provides introduction to standard learning methods such as neural networks, decision trees, boosting, and nearest neighbor techniques. (Formerly CMPS 142.)\nCredits 5\nInstructor Manfred Warmuth, David Helmbold, Snigdha Chaturvedi, Yang Liu, Xin \"Eric\" Wang, Evangelos Chatzisfratis\nRequirements Prerequisite(s): CSE 101; and AM 30, or MATH 22, or MATH 23A; and STAT 131 or CSE 107.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 143 Introduction to Natural Language Processing",
        "description": "Introduces the theory and practice of natural language processing (NLP)--the creation of computer programs that can understand, generate, and learn natural language. Introduces the three major subfields of NLP: syntax (the structure of a sentence); semantics (the explicit meaning of a single sentence); and pragmatics (the implicit meaning of a sentence when it is used in a specific discourse). Projects focus on the techniques useful for a particular application area, alternating in different years. Project application areas include information extraction, narrative understanding, sentiment analysis, dialogue systems, and question answering. (Formerly CMPS 143.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Marilyn Walker, Jeff Flanagan",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter, Spring",
        "fulldesc": "CSE 143 Introduction to Natural Language Processing\nIntroduces the theory and practice of natural language processing (NLP)--the creation of computer programs that can understand, generate, and learn natural language. Introduces the three major subfields of NLP: syntax (the structure of a sentence); semantics (the explicit meaning of a single sentence); and pragmatics (the implicit meaning of a sentence when it is used in a specific discourse). Projects focus on the techniques useful for a particular application area, alternating in different years. Project application areas include information extraction, narrative understanding, sentiment analysis, dialogue systems, and question answering. (Formerly CMPS 143.)\nCredits 5\nInstructor The Staff, Marilyn Walker, Jeff Flanagan\nRequirements Prerequisite(s): CSE 101, and CSE 107 or STAT 131. Python competence equivalent to CSE 30 is highly recommended.\nQuarter Offered Winter, Spring\n"
    },
    {
        "coursename": "CSE 144 Applied Machine Learning",
        "description": "Provides a practical and project-oriented introduction to machine learning, with an emphasis on neural networks and deep learning. Starts with a discussion of the foundational pieces of statistical inference, then introduces the basic elements of machine learning: loss functions and gradient descent. Using these, presents logistic regression, or one-layer networks, and then moves on to more complex models: deep neural networks, convolutional networks for image recognition, and recurrent networks and LSTM for temporal and sequence data. Also covers the basics of dataset preparation and visualization and the performance characterization of the models created. Includes weekly homework and a final project that can be done in groups. (Formerly CMPS 144.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Luca De Alfaro, Narges Norouzi, Benedict Paten, Josh Stuart, David Haussler, Cihang Xie, Yuyin Zhou",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 144 Applied Machine Learning\nProvides a practical and project-oriented introduction to machine learning, with an emphasis on neural networks and deep learning. Starts with a discussion of the foundational pieces of statistical inference, then introduces the basic elements of machine learning: loss functions and gradient descent. Using these, presents logistic regression, or one-layer networks, and then moves on to more complex models: deep neural networks, convolutional networks for image recognition, and recurrent networks and LSTM for temporal and sequence data. Also covers the basics of dataset preparation and visualization and the performance characterization of the models created. Includes weekly homework and a final project that can be done in groups. (Formerly CMPS 144.)\nCredits 5\nInstructor Luca De Alfaro, Narges Norouzi, Benedict Paten, Josh Stuart, David Haussler, Cihang Xie, Yuyin Zhou\nRequirements Prerequisite(s): CSE 101. Enrollment is restricted to juniors and seniors.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 145 Introduction to Data Mining",
        "description": "Covers the techniques, algorithms, and applications of data mining, including data preprocessing, data exploration, classification, clustering, mining text, and sequential and social data. (Formerly TIM 145.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Yi Zhang",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 145 Introduction to Data Mining\nCovers the techniques, algorithms, and applications of data mining, including data preprocessing, data exploration, classification, clustering, mining text, and sequential and social data. (Formerly TIM 145.)\nCredits 5\nInstructor Yi Zhang\nRequirements Prerequisite(s): CSE 15 and CSE 15L or CSE 30 or CSE 13S; and AM 30 or MATH 22 or MATH 23A; and STAT 5 or CSE 107 or STAT 131; and AM 10 or MATH 21; and CSE 16 or ECON 113. Enrollment restricted to juniors and seniors. Graduate students by permission of instructor.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 146 Ethics and Algorithms",
        "description": "Provides an introduction to data-driven and algorithmic decision making, and ethical frameworks for evaluating automated systems. Emphasis on algorithmic literacy, critical analysis, and fundamental limitations of automated decision making. Covers concepts including predictive and causal modeling. Discusses bias, fairness, interpretability, privacy, and accountability. Finally, discusses notions of autonomy and algorithmic auditing.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Lise Getoor",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 146 Ethics and Algorithms\nProvides an introduction to data-driven and algorithmic decision making, and ethical frameworks for evaluating automated systems. Emphasis on algorithmic literacy, critical analysis, and fundamental limitations of automated decision making. Covers concepts including predictive and causal modeling. Discusses bias, fairness, interpretability, privacy, and accountability. Finally, discusses notions of autonomy and algorithmic auditing.\nCredits 5\nInstructor Lise Getoor\nRequirements Prerequisite(s): CSE 101; and CSE 107 or STAT 131. CSE 142 and CSE 140 are recommended.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 150 Introduction to Computer Networks",
        "description": "Addresses issues arising in organizing communications among autonomous computers. Network models and conceptual layers; Internet-working; characteristics of transmission media; switching techniques (packet switching, circuit switching, cell switching); medium access control (MAC) protocols and local area networks; error-control strategies and link-level protocols; routing algorithms for bridges and routers; congestion control mechanisms; transport protocols; application of concepts to practical wireless and wireline networks and standard protocol architectures. Lab component provides students with hands-on experience in computer networks. Students who have completed CSE 80N can take this course for credit.",
        "genEd": "none",
        "credithours": "Credits 7",
        "instructor": "Instructor Chen Quian, Katia Obraczka, Chris The Staff",
        "extrarequirements": "Credits 7",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 150 Introduction to Computer Networks\nAddresses issues arising in organizing communications among autonomous computers. Network models and conceptual layers; Internet-working; characteristics of transmission media; switching techniques (packet switching, circuit switching, cell switching); medium access control (MAC) protocols and local area networks; error-control strategies and link-level protocols; routing algorithms for bridges and routers; congestion control mechanisms; transport protocols; application of concepts to practical wireless and wireline networks and standard protocol architectures. Lab component provides students with hands-on experience in computer networks. Students who have completed CSE 80N can take this course for credit.\nCredits 7\nInstructor Chen Quian, Katia Obraczka, Chris The Staff\nRequirements Prerequisite(s): CSE 16 and CSE 12; and CSE 30, or CSE 15 and CSE 15L.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 151 Advanced Computer Networks",
        "description": "Provides an in-depth coverage of fundamental topics introduced in course 150 including routing, transport, and internetworking. Also introduces advanced concepts not covered in CSE 150 including wireless, application-layer services, security, etc. (Formerly Computer Engineering 151.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Bradley Smith, Jose Garcia-Luna-Aceves",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 151 Advanced Computer Networks\nProvides an in-depth coverage of fundamental topics introduced in course 150 including routing, transport, and internetworking. Also introduces advanced concepts not covered in CSE 150 including wireless, application-layer services, security, etc. (Formerly Computer Engineering 151.)\nCredits 5\nInstructor The Staff, Bradley Smith, Jose Garcia-Luna-Aceves\nRequirements Prerequisite(s): CSE 150. Concurrent enrollment in CSE 151L is required.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 151L Advanced Computer Networks Laboratory",
        "description": "Laboratory illustrating the concepts covered in CSE 151: provides students with hands-on experience in computer networks. (Formerly Computer Engineering 151L.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor The Staff, Bradley Smith, Jose Garcia-Luna-Aceves",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 151L Advanced Computer Networks Laboratory\nLaboratory illustrating the concepts covered in CSE 151: provides students with hands-on experience in computer networks. (Formerly Computer Engineering 151L.)\nCredits 2\nInstructor The Staff, Bradley Smith, Jose Garcia-Luna-Aceves\nRequirements Prerequisite(s): CSE 150. Concurrent enrollment in CSE 151 is required.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 152 Principles of Computer Communication",
        "description": "Course focuses on the design and analysis of protocols for computer communication. Topics include: the safety, liveliness, and performance of communication protocols for medium access control (MAC); link control; routing and switching; multicasting; and end-to-end transport. Students cannot receive credit for this course and CSE 250B.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Jose Garcia-Luna-Aceves",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 152 Principles of Computer Communication\nCourse focuses on the design and analysis of protocols for computer communication. Topics include: the safety, liveliness, and performance of communication protocols for medium access control (MAC); link control; routing and switching; multicasting; and end-to-end transport. Students cannot receive credit for this course and CSE 250B.\nCredits 5\nInstructor Jose Garcia-Luna-Aceves\nRequirements Prerequisite(s): CSE 107, CSE 150, and CSE 150L.\n"
    },
    {
        "coursename": "CSE 156 Network Programming",
        "description": "Methods and tools used for network programming. Topics include: operating system (OS) support for network protocols; inter-process communication (IPC) facilities, such as pipes, sockets, and remote procedure call (RPC); design of client and server sides of network applications; network security; and programming projects. (Formerly Computer Engineering 156.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Mehrdad Parsa, Anujan Varma",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 156 Network Programming\nMethods and tools used for network programming. Topics include: operating system (OS) support for network protocols; inter-process communication (IPC) facilities, such as pipes, sockets, and remote procedure call (RPC); design of client and server sides of network applications; network security; and programming projects. (Formerly Computer Engineering 156.)\nCredits 5\nInstructor The Staff, Mehrdad Parsa, Anujan Varma\nRequirements ,Prerequisites: CSE 150, CSE 150L and CSE 101. Concurrent enrollment in course CSE 156L is required.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 156L Network Programming Laboratory",
        "description": "Laboratory sequence illustrating concepts taught in CSE 156. Students learn use of network programming tools and methods via programming exercises. (Formerly Computer Engineering 156L.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor The Staff, Mehrdad Parsa, Anujan Varma",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 156L Network Programming Laboratory\nLaboratory sequence illustrating concepts taught in CSE 156. Students learn use of network programming tools and methods via programming exercises. (Formerly Computer Engineering 156L.)\nCredits 2\nInstructor The Staff, Mehrdad Parsa, Anujan Varma\nRequirements Prerequisites: CSE 150, CSE 150L, and CSE 101. Concurrent enrollment in CSE 156 is required.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 157 Internet of Things",
        "description": "Introduces the key concepts and techniques in the design of Internet of Things (IoT). Topics include dominant architectures and protocols for IoT, wireless infrastructure for IoT, hardware and software development methodologies, embedded software design for IoT, cloud software for IoT, and network and system security. Students work in teams on a project to design, prototype, and test a complete IoT system.",
        "genEd": "none",
        "credithours": "Credits 7",
        "instructor": "Instructor Anujan Varma, Katia Obraczka",
        "extrarequirements": "Credits 7",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 157 Internet of Things\nIntroduces the key concepts and techniques in the design of Internet of Things (IoT). Topics include dominant architectures and protocols for IoT, wireless infrastructure for IoT, hardware and software development methodologies, embedded software design for IoT, cloud software for IoT, and network and system security. Students work in teams on a project to design, prototype, and test a complete IoT system.\nCredits 7\nInstructor Anujan Varma, Katia Obraczka\nRequirements Prerequisite(s): CSE 121 and CSE 121L and CSE 150 and CSE 150L.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 160 Introduction to Computer Graphics",
        "description": "Introduces techniques of modeling, transformation, and rendering for computer-generated imagery. Topics: 2D/3D primitives, projections, matrix composition, and shading algorithms. Programming assignments and major project required. Students cannot receive credit for both this course and CSE 260 in quarters when they are offered concurrently. Mastery of materials in the prerequisite courses will be verified with a quiz or assignment during the first two weeks of the course. Lab component will help with gaining additional competence with a number of important software development tools, graphics libraries, and graphical user interfaces. Topics include OpenGL, WebGL, rubberbanding, picking, sliders, buttons, dialog, event handling, double buffering, lighting, shading, materials, and textures. The topic list may be updated to reflect technological changes. (Formerly Computer Science 160.)",
        "genEd": "none",
        "credithours": "Credits 7",
        "instructor": "Instructor Alex Pang, James Davis",
        "extrarequirements": "Credits 7",
        "quarteroffered": "Quarter Offered Fall, Spring",
        "fulldesc": "CSE 160 Introduction to Computer Graphics\nIntroduces techniques of modeling, transformation, and rendering for computer-generated imagery. Topics: 2D/3D primitives, projections, matrix composition, and shading algorithms. Programming assignments and major project required. Students cannot receive credit for both this course and CSE 260 in quarters when they are offered concurrently. Mastery of materials in the prerequisite courses will be verified with a quiz or assignment during the first two weeks of the course. Lab component will help with gaining additional competence with a number of important software development tools, graphics libraries, and graphical user interfaces. Topics include OpenGL, WebGL, rubberbanding, picking, sliders, buttons, dialog, event handling, double buffering, lighting, shading, materials, and textures. The topic list may be updated to reflect technological changes. (Formerly Computer Science 160.)\nCredits 7\nInstructor Alex Pang, James Davis\nRequirements Prerequisite(s): CSE 101 and MATH 21 or AM 10.\nQuarter Offered Fall, Spring\n"
    },
    {
        "coursename": "CSE 161 Introduction to Data Visualization",
        "description": "Concepts and methods for data analysis, information and scientific visualization, and effective communication of technical data. Topics include: mathematical foundations; scalar, vector, and tensor field visualization; multivariate visualization; and tree and graph visualizations. Applications are drawn from social-network analysis; environmental and space science; and medical imaging. Evaluation based on examinations, programming exercises, and a project. (Formerly CMPS 161.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Alex Pang, Suresh Lodha",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 161 Introduction to Data Visualization\nConcepts and methods for data analysis, information and scientific visualization, and effective communication of technical data. Topics include: mathematical foundations; scalar, vector, and tensor field visualization; multivariate visualization; and tree and graph visualizations. Applications are drawn from social-network analysis; environmental and space science; and medical imaging. Evaluation based on examinations, programming exercises, and a project. (Formerly CMPS 161.)\nCredits 5\nInstructor Alex Pang, Suresh Lodha\nRequirements Prerequisite(s): CSE 160 or equivalent. Concurrent enrollment in CSE 161L is required.\n"
    },
    {
        "coursename": "CSE 161L Data Visualization Laboratory",
        "description": "Complements CSE 161. Students gain additional competence with a number of important software development tools and techniques. Included are Paraview, Visualization Toolkit (VTK), and Insight Toolkit (ITK). Students get hands-on experience with designing transfer functions, isosurfacing, direct volume rendering, vector-field visualization techniques, as well as methods for dealing with non-spatial data. (Formerly CMPS 161L.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Alex Pang, Suresh Lodha",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 161L Data Visualization Laboratory\nComplements CSE 161. Students gain additional competence with a number of important software development tools and techniques. Included are Paraview, Visualization Toolkit (VTK), and Insight Toolkit (ITK). Students get hands-on experience with designing transfer functions, isosurfacing, direct volume rendering, vector-field visualization techniques, as well as methods for dealing with non-spatial data. (Formerly CMPS 161L.)\nCredits 2\nInstructor Alex Pang, Suresh Lodha\nRequirements Concurrent enrollment in CSE 161 is required.\n"
    },
    {
        "coursename": "CSE 162 Advanced Computer Graphics and Animation",
        "description": "Covers concepts and methods for modeling and rendering static and dynamic scenes Topics include: mathematical foundations (e.g., splines and numerical integration; global illumination models; texture mapping; morphing; physically based animation; behavioral animations; and procedural animations. Evaluation based on examinations, programming exercises, and a project. (Formerly CMPS 162.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Alex Pang, James Davis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 162 Advanced Computer Graphics and Animation\nCovers concepts and methods for modeling and rendering static and dynamic scenes Topics include: mathematical foundations (e.g., splines and numerical integration; global illumination models; texture mapping; morphing; physically based animation; behavioral animations; and procedural animations. Evaluation based on examinations, programming exercises, and a project. (Formerly CMPS 162.)\nCredits 5\nInstructor Alex Pang, James Davis\nRequirements Prerequisite(s): CSE 160 or equivalent. Concurrent enrollment in CSE 162L is required.\n"
    },
    {
        "coursename": "CSE 162L Advanced Computer Graphics and Animation Laboratory",
        "description": "Complements CSE 162. Students gain additional competence in a hands-on computational laboratory setting. Representative examples include topics, such as interactive curve and surface design; shaders for advanced effects; crowd and behavioral animation; experiments with particle systems; facial animation; and motion and planning. (Formerly CMPS 162L.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Alex Pang, James Davis",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 162L Advanced Computer Graphics and Animation Laboratory\nComplements CSE 162. Students gain additional competence in a hands-on computational laboratory setting. Representative examples include topics, such as interactive curve and surface design; shaders for advanced effects; crowd and behavioral animation; experiments with particle systems; facial animation; and motion and planning. (Formerly CMPS 162L.)\nCredits 2\nInstructor Alex Pang, James Davis\nRequirements Prerequisite(s): concurrent enrollment in CSE 162 is required.\n"
    },
    {
        "coursename": "CSE 163 Data Programming for Visualization",
        "description": "Presents the basics of open-source programming tools to perform data analysis and create interactive visualizations and maps for the web, data integrity and scraping, statistical computation, simple and novel visualizations, and geomapping. The examples are drawn from social science, public policy, and data journalism. (Formerly CMPS 165.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Suresh Lodha",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 163 Data Programming for Visualization\nPresents the basics of open-source programming tools to perform data analysis and create interactive visualizations and maps for the web, data integrity and scraping, statistical computation, simple and novel visualizations, and geomapping. The examples are drawn from social science, public policy, and data journalism. (Formerly CMPS 165.)\nCredits 5\nInstructor Suresh Lodha\nRequirements Prerequisite(s): CSE 101.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 164 Computer Vision",
        "description": "Introduces both the basic computer vision concepts and the advanced deep learning methods for computer vision. Topics include fundamentals of image formation, camera imaging geometry, early-/mid-/high-level vision, basics of machine learning and convolutional neural networks for vision.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Cihang Xie",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 164 Computer Vision\nIntroduces both the basic computer vision concepts and the advanced deep learning methods for computer vision. Topics include fundamentals of image formation, camera imaging geometry, early-/mid-/high-level vision, basics of machine learning and convolutional neural networks for vision.\nCredits 5\nInstructor Cihang Xie\nRequirements Prerequisite(s): CSE 144.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 165 Human-Computer Interaction",
        "description": "Theory and hands-on practice to understand what makes user interfaces usable and accessible to diverse individuals. Covers human senses and memory and their design implications, requirement solicitation, user-centered design and prototyping techniques, and expert and user evaluations. Interdisciplinary course for social science and engineering majors. Students cannot receive credit for this course and CSE 265 or DANM 231. (Formerly Computer Engineering 131.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 165 Human-Computer Interaction\nTheory and hands-on practice to understand what makes user interfaces usable and accessible to diverse individuals. Covers human senses and memory and their design implications, requirement solicitation, user-centered design and prototyping techniques, and expert and user evaluations. Interdisciplinary course for social science and engineering majors. Students cannot receive credit for this course and CSE 265 or DANM 231. (Formerly Computer Engineering 131.)\nCredits 5\nRequirements Prerequisite(s): CSE 15.\n"
    },
    {
        "coursename": "CSE 167 Mobile Sensing and Interaction",
        "description": "Provides hands-on knowledge and experience with modern mobile computing platforms for sensing and interactions tasks. Students learn how to create usable applications on a sensor-laden, mobile computing platform with adequate level of user interface.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Roberto Manduchi",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 167 Mobile Sensing and Interaction\nProvides hands-on knowledge and experience with modern mobile computing platforms for sensing and interactions tasks. Students learn how to create usable applications on a sensor-laden, mobile computing platform with adequate level of user interface.\nCredits 5\nInstructor Roberto Manduchi\nRequirements Prerequisite(s): CSE 13S; or CSE 13E or ECE 13; or CSE 15 and CSE 15L; and PHYS 5A or PHYS 6A; and AM 10 or MATH 21.\n"
    },
    {
        "coursename": "CSE 168 Introduction to Augmented Reality and Virtual Reality",
        "description": "Covers the concepts and methods needed to develop augmented reality (AR) and virtual reality (VR) applications. Topics include 3D modeling, graphics rendering, image compositing, occlusion handling, sensors, computer vision and image analysis, toolkits for AR, different display options, dynamics, interaction, and navigation. Prerequisite(s): CSE 160 and CSE 160L. Some knowledge of mobile platforms (e.g., CSE 118 or CSE 167) is helpful, but not required. Enrollment is by instructor permission. Enrollment is restricted to juniors and seniors. (Formerly CMPS 168.)",
        "genEd": "none",
        "credithours": "Credits 7",
        "instructor": "Instructor Alex Pang, James Davis",
        "extrarequirements": "Credits 7",
        "quarteroffered": "none",
        "fulldesc": "CSE 168 Introduction to Augmented Reality and Virtual Reality\nCovers the concepts and methods needed to develop augmented reality (AR) and virtual reality (VR) applications. Topics include 3D modeling, graphics rendering, image compositing, occlusion handling, sensors, computer vision and image analysis, toolkits for AR, different display options, dynamics, interaction, and navigation. Prerequisite(s): CSE 160 and CSE 160L. Some knowledge of mobile platforms (e.g., CSE 118 or CSE 167) is helpful, but not required. Enrollment is by instructor permission. Enrollment is restricted to juniors and seniors. (Formerly CMPS 168.)\nCredits 7\nInstructor Alex Pang, James Davis\n"
    },
    {
        "coursename": "CSE 180 Database Systems I",
        "description": "Introduction to the concepts, approaches, tools, and methodology of database design. Covers the entity-relationship model, the relational model, relational algebra, relational calculus, commercial languages (such as SQL and QBE), functional dependencies, normal forms, and design theory. Other topics may include knowledge-bases, constraint databases, and alternative database models. Students that have taken and passed CSE 182 may not take CSE 180 for credit. (Formerly CMPS 180.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Sheldon Finkelstein",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter",
        "fulldesc": "CSE 180 Database Systems I\nIntroduction to the concepts, approaches, tools, and methodology of database design. Covers the entity-relationship model, the relational model, relational algebra, relational calculus, commercial languages (such as SQL and QBE), functional dependencies, normal forms, and design theory. Other topics may include knowledge-bases, constraint databases, and alternative database models. Students that have taken and passed CSE 182 may not take CSE 180 for credit. (Formerly CMPS 180.)\nCredits 5\nInstructor The Staff, Sheldon Finkelstein\nRequirements Prerequisite(s): CSE 101.\nQuarter Offered Fall, Winter\n"
    },
    {
        "coursename": "CSE 181 Database Systems II",
        "description": "Introduction to the architecture and implementation of database systems. Topics covered include data storage, tree and hash indexes, storage management, query evaluation and optimization, transaction management, concurrency control, recovery, and XML data management. (Formerly CMPS 181.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Sheldon Finkelstein",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 181 Database Systems II\nIntroduction to the architecture and implementation of database systems. Topics covered include data storage, tree and hash indexes, storage management, query evaluation and optimization, transaction management, concurrency control, recovery, and XML data management. (Formerly CMPS 181.)\nCredits 5\nInstructor The Staff, Sheldon Finkelstein\nRequirements Prerequisite(s): CSE 180.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 182 Introduction to Database Management Systems",
        "description": "Concepts, approaches, tools, and methodology of database design. Topics include the entity-relationship model; the relational data model; normal forms; commercial languages such as SQL (SQL constraints, SQL triggers, and update languages); query-by-example (QBE); XML data model, and XML query language (XQuery); as well as relational database-management support for XML and object-relational features in database-management systems. Involves a database -application development project. Students that have taken and passed CSE 180 cannot receive credit for CSE 182.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Sheldon Finkelstein",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 182 Introduction to Database Management Systems\nConcepts, approaches, tools, and methodology of database design. Topics include the entity-relationship model; the relational data model; normal forms; commercial languages such as SQL (SQL constraints, SQL triggers, and update languages); query-by-example (QBE); XML data model, and XML query language (XQuery); as well as relational database-management support for XML and object-relational features in database-management systems. Involves a database -application development project. Students that have taken and passed CSE 180 cannot receive credit for CSE 182.\nCredits 5\nInstructor Sheldon Finkelstein\nRequirements Prerequisite(s): CSE 15 and CSE 15L or CSE 13E or CSE 13S or ECE 13. Course intended for non-majors; computer science majors should enroll in CSE 180.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 183 Web Applications",
        "description": "The World-Wide Web is one of the main mechanisms by which computer applications are delivered to users. This course introduces the design of Web applications. Students learn the main technologies involved, and build web applications as part of homework assignments and group class projects.(Formerly CMPS 183.)",
        "genEd": "General Education Code PR-E",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Jim Whitehead, Luca De Alfaro, Richard Jullig, David Harrison",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 183 Web Applications\nThe World-Wide Web is one of the main mechanisms by which computer applications are delivered to users. This course introduces the design of Web applications. Students learn the main technologies involved, and build web applications as part of homework assignments and group class projects.(Formerly CMPS 183.)\nCredits 5\nInstructor The Staff, Jim Whitehead, Luca De Alfaro, Richard Jullig, David Harrison\nRequirements Prerequisite(s): CSE 15 and CSE 15L, or CMPM 35, or CSE 101.\nGeneral Education Code PR-E\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 184 Data Wrangling and Web Scraping",
        "description": "Python basics; data extraction from CSV, JSON, XML, Excel, PDF, encoded text files; data cleaning, finding duplicates, missing data, fuzzy matching; data exploration, joining, aggregating, separating, correlation, clustering; web scraping, APIs, scraping data from social media, open data network. (Formerly CMPS 184.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Suresh Lodha",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 184 Data Wrangling and Web Scraping\nPython basics; data extraction from CSV, JSON, XML, Excel, PDF, encoded text files; data cleaning, finding duplicates, missing data, fuzzy matching; data exploration, joining, aggregating, separating, correlation, clustering; web scraping, APIs, scraping data from social media, open data network. (Formerly CMPS 184.)\nCredits 5\nInstructor Suresh Lodha\nRequirements Prerequisite(s): CSE 101.\n"
    },
    {
        "coursename": "CSE 185E Technical Writing for Computer Science and Engineering",
        "description": "Cross Listed Courses Prerequisite(s): CSE 101, one additional upper-division CSE course, and satisfaction of the Entry Level Writing and Composition requirements. Enrollment is restricted to computer science majors, or by permission of the instructor.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Gerald Moulds",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 185E Technical Writing for Computer Science and Engineering\nWriting by engineers and computer scientists to technical audiences. Writing exercises include: cover letter and resume for job application, tutorial writing, grant proposal, document specification, literature review, and a final technical report. Two oral presentations are also required, an in-class presentation and a poster presentation. Students also receive instruction in the use of UC library and journal database resources, and in the writing of a statement of purpose for graduate school application. Also offered as CSE 185S. (Formerly Computer Engineering 185, Technical Writing for Computer Engineers.)\nCredits 5\nCross Listed Courses Prerequisite(s): CSE 101, one additional upper-division CSE course, and satisfaction of the Entry Level Writing and Composition requirements. Enrollment is restricted to computer science majors, or by permission of the instructor.\nCross Listed Courses CSE 185S\nInstructor Gerald Moulds\nRequirements Prerequisite(s): satisfaction of Entry Level Writing and Composition requirements; and CSE 12 or CSE 15 or CSE 30 or BME 160 or by permission of the instructor. Enrollment is restricted to computer engineering, bioengineering, bioinformatics, biomolecular engineering and bioinformatics, or network and digital technology majors.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 186 Full Stack Web Development I",
        "description": "Examines current uses of the World Wide Web for delivery of the sophisticated interactive applications used daily. Web applications offer several advantages over traditional, locally installable binaries including heterogeneous deployment, instantaneous access, continuous updates, and the possibility of collaboration at scale. These full stack web applications are typically more complex than their traditional counterparts, requiring the seamless integrating of numerous related technologies if end users are to have a productive experience and the system is to remain robust, performant, and secure.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor David Harrison",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Summer",
        "fulldesc": "CSE 186 Full Stack Web Development I\nExamines current uses of the World Wide Web for delivery of the sophisticated interactive applications used daily. Web applications offer several advantages over traditional, locally installable binaries including heterogeneous deployment, instantaneous access, continuous updates, and the possibility of collaboration at scale. These full stack web applications are typically more complex than their traditional counterparts, requiring the seamless integrating of numerous related technologies if end users are to have a productive experience and the system is to remain robust, performant, and secure.\nCredits 5\nInstructor David Harrison\nRequirements Prerequisite(s): CSE 15 and CSE 15L, or CSE 30, or CSE 101. Enrollment is restricted to juniors and seniors majoring in computer engineering, computer science, and computer game design.\nQuarter Offered Fall, Winter, Summer\n"
    },
    {
        "coursename": "CSE 191 Computer Science and Technology Seminar",
        "description": "Weekly talks by industry experts, university researchers, field practitioners, and video presentations provide an in-depth exposure to a specific or a broad area of computer science and technology. Topics include emerging ideas, opportunities, challenges, and future of the industry. (Formerly CMPS 191.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor The Staff, Suresh Lodha, James Davis, Marilyn Walker",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 191 Computer Science and Technology Seminar\nWeekly talks by industry experts, university researchers, field practitioners, and video presentations provide an in-depth exposure to a specific or a broad area of computer science and technology. Topics include emerging ideas, opportunities, challenges, and future of the industry. (Formerly CMPS 191.)\nCredits 2\nInstructor The Staff, Suresh Lodha, James Davis, Marilyn Walker\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 192 Supervised Student Teaching/Tutoring",
        "description": "Students hold tutoring hours, run a lab, or lead discussion section in conjunction with a regularly offered course and under close supervision by the course's instructor. Weekly meetings with a regular faculty member to discuss teaching techniques, pedagogy, sensitivity to students' needs, maintaining a comfortable learning environment, and strategies for handling difficult situations. Students submit a report on their teaching experience. Enrollment by permission of instructor and restricted to sophomores, juniors, and seniors. (Formerly CMPS 192.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor David Helmbold",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 192 Supervised Student Teaching/Tutoring\nStudents hold tutoring hours, run a lab, or lead discussion section in conjunction with a regularly offered course and under close supervision by the course's instructor. Weekly meetings with a regular faculty member to discuss teaching techniques, pedagogy, sensitivity to students' needs, maintaining a comfortable learning environment, and strategies for handling difficult situations. Students submit a report on their teaching experience. Enrollment by permission of instructor and restricted to sophomores, juniors, and seniors. (Formerly CMPS 192.)\nCredits 5\nInstructor David Helmbold\n"
    },
    {
        "coursename": "CSE 192F Supervised Student Teaching/Tutoring",
        "description": "Students hold tutoring hours, run a lab, or lead discussion section in conjunction with a regularly offered course and under close supervision by the course's instructor. Weekly meetings with a regular faculty member to discuss teaching techniques, pedagogy, sensitivity to students' needs, maintaining a comfortable learning environment, and strategies for handling difficult situations. Students submit a report on their teaching experience. Enrollment by permission of instructor and restricted to sophomores, juniors, and seniors. (Formerly CMPS 192F.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor David Helmbold",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 192F Supervised Student Teaching/Tutoring\nStudents hold tutoring hours, run a lab, or lead discussion section in conjunction with a regularly offered course and under close supervision by the course's instructor. Weekly meetings with a regular faculty member to discuss teaching techniques, pedagogy, sensitivity to students' needs, maintaining a comfortable learning environment, and strategies for handling difficult situations. Students submit a report on their teaching experience. Enrollment by permission of instructor and restricted to sophomores, juniors, and seniors. (Formerly CMPS 192F.)\nCredits 2\nInstructor David Helmbold\n"
    },
    {
        "coursename": "CSE 193 Field Study",
        "description": "Provides for individual programs of study with specific academic objectives carried out under the direction of a faculty member of the Computer Engineering Department and a willing sponsor at the field site using resources not normally available on campus. Credit is based on the presentation of evidence of achieving the objectives by submitting a written and oral presentation. May not be repeated for credit. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 193 Field Study\nProvides for individual programs of study with specific academic objectives carried out under the direction of a faculty member of the Computer Engineering Department and a willing sponsor at the field site using resources not normally available on campus. Credit is based on the presentation of evidence of achieving the objectives by submitting a written and oral presentation. May not be repeated for credit. Students submit petition to sponsoring agency.\nCredits 5\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 193F Field Study",
        "description": "Provides for individual programs of study with specific academic objectives carried out under the direction of a faculty member of the Computer Engineering Department and a willing sponsor at the field site using resources not normally available on campus. Credit is based on the presentation of evidence of achieving the objectives by submitting a written and oral presentation. May not be repeated for credit. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 193F Field Study\nProvides for individual programs of study with specific academic objectives carried out under the direction of a faculty member of the Computer Engineering Department and a willing sponsor at the field site using resources not normally available on campus. Credit is based on the presentation of evidence of achieving the objectives by submitting a written and oral presentation. May not be repeated for credit. Students submit petition to sponsoring agency.\nCredits 2\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 194 Group Tutorial",
        "description": "A program of independent study arranged between a group of students and a faculty member. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 194 Group Tutorial\nA program of independent study arranged between a group of students and a faculty member. Students submit petition to sponsoring agency.\nCredits 5\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 194F Group Tutorial",
        "description": "A program of independent study arranged between a group of students and a faculty member. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 194F Group Tutorial\nA program of independent study arranged between a group of students and a faculty member. Students submit petition to sponsoring agency.\nCredits 2\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 195 Senior Thesis Research",
        "description": "Students submit petition to sponsoring agency. Prerequisite(s): satisfaction of the Entry Level Writing and Composition requirements. Computer Engineering majors, CSE 123A or CSE 129A.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 195 Senior Thesis Research\nStudents submit petition to sponsoring agency. Prerequisite(s): satisfaction of the Entry Level Writing and Composition requirements. Computer Engineering majors, CSE 123A or CSE 129A.\nCredits 5\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 195F Senior Thesis Research",
        "description": "Students submit petition to sponsoring agency. Consent of instructor required. Prerequisite: CSE 123A.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 195F Senior Thesis Research\nStudents submit petition to sponsoring agency. Consent of instructor required. Prerequisite: CSE 123A.\nCredits 2\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 198 Individual Study or Research",
        "description": "Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 198 Individual Study or Research\nStudents submit petition to sponsoring agency.\nCredits 5\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 198F Individual Study or Research",
        "description": "Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 198F Individual Study or Research\nStudents submit petition to sponsoring agency.\nCredits 2\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 199 Tutorial",
        "description": "For fourth-year students majoring in computer engineering. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 199 Tutorial\nFor fourth-year students majoring in computer engineering. Students submit petition to sponsoring agency.\nCredits 5\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 199F Tutorial",
        "description": "For fourth-year students majoring in computer engineering. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 199F Tutorial\nFor fourth-year students majoring in computer engineering. Students submit petition to sponsoring agency.\nCredits 2\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 200 Research and Teaching in Computer Science and Engineering",
        "description": "Basic teaching techniques for teaching assistants, including responsibilities and rights of teaching assistants, resource materials, computer security, leading discussion or lab sessions, presentation techniques, maintaining class records, electronic handling of homework, and grading. The course examines research and professional training, including use of the library and online databases, technical typesetting, writing journal and conference papers, publishing in computer science and computer engineering, giving talks in seminars and conferences, and ethical issues in science and engineering. Required for all teaching assistants. Formerly CMPS 200 and CMPE 200.)",
        "genEd": "none",
        "credithours": "Credits 3",
        "instructor": "Instructor The Staff, Katia Obraczka, Alex Pang, Suresh Loda, Chen Qian",
        "extrarequirements": "Credits 3",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 200 Research and Teaching in Computer Science and Engineering\nBasic teaching techniques for teaching assistants, including responsibilities and rights of teaching assistants, resource materials, computer security, leading discussion or lab sessions, presentation techniques, maintaining class records, electronic handling of homework, and grading. The course examines research and professional training, including use of the library and online databases, technical typesetting, writing journal and conference papers, publishing in computer science and computer engineering, giving talks in seminars and conferences, and ethical issues in science and engineering. Required for all teaching assistants. Formerly CMPS 200 and CMPE 200.)\nCredits 3\nInstructor The Staff, Katia Obraczka, Alex Pang, Suresh Loda, Chen Qian\nRequirements Enrollment is restricted to graduate students.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 201 Analysis of Algorithms",
        "description": "Rigorous analysis of the time and space requirements of important algorithms, including worst case, average case, and amortized analysis. Techniques include order-notation, recurrence relations, information-theoretic lower bounds, adversary arguments. Analysis of the key data structures: trees, hash tables, balanced tree schemes, priority queues, Fibonacci and binomial heaps. Algorithmic paradigms such as divide and conquer, dynamic programming, union-find with path compression, augmenting paths. Selected advanced algorithms. Introduction to NP-completeness. (Formerly Computer Science 201.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Sheldon Finkelstein, Patrick Tantalo, Allen Van Gelder, David Helmbold, Seshiri Comandur",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter",
        "fulldesc": "CSE 201 Analysis of Algorithms\nRigorous analysis of the time and space requirements of important algorithms, including worst case, average case, and amortized analysis. Techniques include order-notation, recurrence relations, information-theoretic lower bounds, adversary arguments. Analysis of the key data structures: trees, hash tables, balanced tree schemes, priority queues, Fibonacci and binomial heaps. Algorithmic paradigms such as divide and conquer, dynamic programming, union-find with path compression, augmenting paths. Selected advanced algorithms. Introduction to NP-completeness. (Formerly Computer Science 201.)\nCredits 5\nInstructor Sheldon Finkelstein, Patrick Tantalo, Allen Van Gelder, David Helmbold, Seshiri Comandur\nRequirements Enrollment is restricted to graduate students; undergraduate students may enroll in this course if they have completed CSE 102 or CSE 106 and have the consent of the instructor.\nQuarter Offered Fall, Winter\n"
    },
    {
        "coursename": "CSE 202 Combinatorial Algorithms",
        "description": "Fundamental combinatorial algorithms, graph algorithms, flow problems, matching problems, linear programming, integer programming, NP-completeness, approximation algorithms for optimization problems. (Formerly Computer Science 211.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Allen Van Gelder, Phokion Kolaitis, Seshiri Comandur",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 202 Combinatorial Algorithms\nFundamental combinatorial algorithms, graph algorithms, flow problems, matching problems, linear programming, integer programming, NP-completeness, approximation algorithms for optimization problems. (Formerly Computer Science 211.)\nCredits 5\nInstructor Allen Van Gelder, Phokion Kolaitis, Seshiri Comandur\nRequirements Prerequisite(s): CSE 201.\n"
    },
    {
        "coursename": "CSE 204 Computational Models and Complexity",
        "description": "Finite automata and regular expressions, universal models of computation, computability and unsolvability, relations between complexity classes, hierarchy theorems, reductions, complete problems for the major complexity classes (L, NL, P, NP, PSPACE). Other topics may include complexity of counting and enumeration problems, complexity of approximation, randomized complexity classes. (Formerly Computer Science 210.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Manfred Warmuth, Phokion Kolaitis, David Helmbold, Sesh Comandur, Allen Van Gelder",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 204 Computational Models and Complexity\nFinite automata and regular expressions, universal models of computation, computability and unsolvability, relations between complexity classes, hierarchy theorems, reductions, complete problems for the major complexity classes (L, NL, P, NP, PSPACE). Other topics may include complexity of counting and enumeration problems, complexity of approximation, randomized complexity classes. (Formerly Computer Science 210.)\nCredits 5\nInstructor Manfred Warmuth, Phokion Kolaitis, David Helmbold, Sesh Comandur, Allen Van Gelder\nRequirements Prerequisite(s): CSE 201.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 205 Logic in Computer Science",
        "description": "The applications and uses of formal systems to computer science. Covers the syntax and semantics of propositional logic and first-order logic, normal forms, soundness and completeness theorems, Herbrand's theorem, unification and resolution, foundations of logic programming, automated theorem proving. Other topics may include deductive databases, database query languages, nonmonotonic reasoning. (Formerly Computer Science 217.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Allen Van Gelder, Phokion Kolaitis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 205 Logic in Computer Science\nThe applications and uses of formal systems to computer science. Covers the syntax and semantics of propositional logic and first-order logic, normal forms, soundness and completeness theorems, Herbrand's theorem, unification and resolution, foundations of logic programming, automated theorem proving. Other topics may include deductive databases, database query languages, nonmonotonic reasoning. (Formerly Computer Science 217.)\nCredits 5\nInstructor Allen Van Gelder, Phokion Kolaitis\nRequirements Enrollment is restricted to graduate students.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 207 Graph Algorithms",
        "description": "Explores graph theory and algorithms for solving problems in engineering. A review of basic graph concepts and algorithms is followed by topics in network flow, partitioning, spectral analysis of graphs, graph isomorphism, and intractability. (Formerly Computer Engineering 277.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Martine Schlag",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 207 Graph Algorithms\nExplores graph theory and algorithms for solving problems in engineering. A review of basic graph concepts and algorithms is followed by topics in network flow, partitioning, spectral analysis of graphs, graph isomorphism, and intractability. (Formerly Computer Engineering 277.)\nCredits 5\nInstructor Martine Schlag\nRequirements Prerequisite(s): CSE 101 and CSE 102; or CSE 106; or CSE 201; or equivalent. Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 210A Programming Languages",
        "description": "Covers current issues in programming languages. Language topics include object oriented, concurrent, functional, and logic programming, and other programmable applications such as symbolic manipulators and simulation. (Formerly Computer Science 203.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Cormac Flanagan, Allen Van Gelder, Lindsey Kuper",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 210A Programming Languages\nCovers current issues in programming languages. Language topics include object oriented, concurrent, functional, and logic programming, and other programmable applications such as symbolic manipulators and simulation. (Formerly Computer Science 203.)\nCredits 5\nInstructor The Staff, Cormac Flanagan, Allen Van Gelder, Lindsey Kuper\nRequirements Enrollment is restricted to graduate students; undergraduate students may enroll for this course if they have completed CSE 112 and have the consent of the instructor.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 210B Advanced Programming Languages",
        "description": "Covers issues in the design, implementation, analysis, and specification of programming languages. Topics include formal semantics (including operational, axiomatic, and denotational semantics), advanced type systems, program analysis (including abstract interpretation and model checking), specification, and verification. (Formerly Computer Science 253.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Cormac Flanagan, Owen Arden",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 210B Advanced Programming Languages\nCovers issues in the design, implementation, analysis, and specification of programming languages. Topics include formal semantics (including operational, axiomatic, and denotational semantics), advanced type systems, program analysis (including abstract interpretation and model checking), specification, and verification. (Formerly Computer Science 253.)\nCredits 5\nInstructor Cormac Flanagan, Owen Arden\nRequirements Prerequisite(s): CSE 210A or equivalent.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 211 Compiler Design",
        "description": "Advanced study of compiler implementation. Topics include compiler structure back end, run-time environments, storage management, garbage collection, register allocation, code generation, basic blocks, control flow, data flow, local and global optimization, interpretation, machine code generation. Students may not receive credit for this course and CSE 110B. Taught in conjunction with CSE 110B. (Formerly Computer Science 204.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Wesley Mackey, Tyler Sorensen",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 211 Compiler Design\nAdvanced study of compiler implementation. Topics include compiler structure back end, run-time environments, storage management, garbage collection, register allocation, code generation, basic blocks, control flow, data flow, local and global optimization, interpretation, machine code generation. Students may not receive credit for this course and CSE 110B. Taught in conjunction with CSE 110B. (Formerly Computer Science 204.)\nCredits 5\nInstructor Wesley Mackey, Tyler Sorensen\nRequirements Prerequisite(s): CSE 110A or equivalent. Enrollment is restricted to graduate students.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 212A Software Engineering",
        "description": "Introduction to the general principles of software engineering. Covers current and classical topics from both practical and theoretical viewpoints. Topics include software evolution, project management, software inspections, design methods, requirements analysis and specification, software testing, maintenance, software implementation, human interfaces, and software engineering experimentation. (Formerly CMPS 276.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Jim Whitehead, Luca De Alfaro, David Harrison",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 212A Software Engineering\nIntroduction to the general principles of software engineering. Covers current and classical topics from both practical and theoretical viewpoints. Topics include software evolution, project management, software inspections, design methods, requirements analysis and specification, software testing, maintenance, software implementation, human interfaces, and software engineering experimentation. (Formerly CMPS 276.)\nCredits 5\nInstructor The Staff, Jim Whitehead, Luca De Alfaro, David Harrison\nRequirements Enrollment is restricted to graduate students; undergraduates may enroll in this course if they have completed CSE 115A.\n"
    },
    {
        "coursename": "CSE 212B Software Reuse and Component-Based Software Engineering",
        "description": "Detailed study of interlocking business, organizational, and technical issues in large-scale software reuse and component-based software engineering. Topics include architecture, design for reuse, domain engineering, model-driven development, domain-specific kits, components, frameworks, software agents, generators, problem-oriented languages, library design, reuse tools, patterns, and aspects. Assumes prior exposure to software engineering topics. (Formerly Computer Science 279.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 212B Software Reuse and Component-Based Software Engineering\nDetailed study of interlocking business, organizational, and technical issues in large-scale software reuse and component-based software engineering. Topics include architecture, design for reuse, domain engineering, model-driven development, domain-specific kits, components, frameworks, software agents, generators, problem-oriented languages, library design, reuse tools, patterns, and aspects. Assumes prior exposure to software engineering topics. (Formerly Computer Science 279.)\nCredits 5\nRequirements Prerequisite(s): CSE 212A or consent of instructor. Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 214 Principles of Database Systems",
        "description": "Advanced course on principles of database systems. Main topics include overview of the relational data model and relational query languages; recursive queries, datalog, and fixed-points; query processing and optimization; database design, dependencies, normal forms, and the chase procedure. Additional topics may include information integration, complex objects, semistructured data, and XML. (Formerly Computer Science 277.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Faisal Nawab, Phokion Kolaitis, Sheldon Finkelstein, Narges Norouzi",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 214 Principles of Database Systems\nAdvanced course on principles of database systems. Main topics include overview of the relational data model and relational query languages; recursive queries, datalog, and fixed-points; query processing and optimization; database design, dependencies, normal forms, and the chase procedure. Additional topics may include information integration, complex objects, semistructured data, and XML. (Formerly Computer Science 277.)\nCredits 5\nInstructor Faisal Nawab, Phokion Kolaitis, Sheldon Finkelstein, Narges Norouzi\nRequirements Prerequisite(s): CSE 201 or equivalent or consent of instructor. Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 215 Design and Implementation of Database Systems",
        "description": "Advanced course in implementation techniques for database systems. For students who wish to do research in databases or to learn more about large-scale data processing. Topics include: indexing of complex data; techniques for high-volume concurrency control; query processing and optimization; database recovery; parallel database system architectures; database systems for streaming data; approximate query answering. Additional topics may include: self-managing database systems; advanced query optimization techniques; and query processing techniques for semi-structured data. (Formerly Computer Science 278.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Phokion Kolaitis, Peter Alvaro, Sheldon Finkelstein",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 215 Design and Implementation of Database Systems\nAdvanced course in implementation techniques for database systems. For students who wish to do research in databases or to learn more about large-scale data processing. Topics include: indexing of complex data; techniques for high-volume concurrency control; query processing and optimization; database recovery; parallel database system architectures; database systems for streaming data; approximate query answering. Additional topics may include: self-managing database systems; advanced query optimization techniques; and query processing techniques for semi-structured data. (Formerly Computer Science 278.)\nCredits 5\nInstructor The Staff, Phokion Kolaitis, Peter Alvaro, Sheldon Finkelstein\nRequirements Prerequisite(s): CSE 181 (or equivalent) or consent of instructor. Enrollment is restricted to graduate students.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 216 Formal Methods",
        "description": "Mathematical techniques for analyzing systems to prove rigorous guarantees about their behavior. Fundamental algorithms for and advanced topics in modeling, specification, verification, correct-by-construction synthesis, and testing. Applications to hardware/software design, cybersecurity, robotics, machine learning. Course includes a final project.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Daniel Fremont",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 216 Formal Methods\nMathematical techniques for analyzing systems to prove rigorous guarantees about their behavior. Fundamental algorithms for and advanced topics in modeling, specification, verification, correct-by-construction synthesis, and testing. Applications to hardware/software design, cybersecurity, robotics, machine learning. Course includes a final project.\nCredits 5\nInstructor Daniel Fremont\nRequirements Prerequisite(s): CSE 103 or equivalent recommended, but not required. Enrollment is restricted to graduate students; undergraduates may enroll by permission of instructor.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 220 Computer Architecture",
        "description": "Provides a thorough and fundamental treatment of the art of computer architecture. Topics include concepts of von Neumann architectures, methods of evaluating CPU performance, instruction-set design and examples, compiler issues, instruction pipelining, superscalar processors, methods for reduction of branch penalty, memory hierarchies, I/O systems, floating-point arithmetic, and current issues in parallel processing. (Formerly CMPE 202.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Scott Beamer, Jose Renau Ardevol, Heiner Litz",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Spring",
        "fulldesc": "CSE 220 Computer Architecture\nProvides a thorough and fundamental treatment of the art of computer architecture. Topics include concepts of von Neumann architectures, methods of evaluating CPU performance, instruction-set design and examples, compiler issues, instruction pipelining, superscalar processors, methods for reduction of branch penalty, memory hierarchies, I/O systems, floating-point arithmetic, and current issues in parallel processing. (Formerly CMPE 202.)\nCredits 5\nInstructor Scott Beamer, Jose Renau Ardevol, Heiner Litz\nRequirements Enrollment is restricted to graduate students; undergraduates may enroll if they have completed CSE 120 and with consent of instructor. A basic knowledge of computer architecture, similar to the content of CSE 120, is recommended.\nQuarter Offered Fall, Spring\n"
    },
    {
        "coursename": "CSE 221 Advanced Microprocessor Design",
        "description": "Introduction to latest advances in computer architecture. Focuses on processor core design. Topics include simultaneous multithreading, thread level speculation, trace caches, novel out-of-order mechanisms, and energy-efficient processor core designs. Final project is modification/enhancement of an out-of-order processor on an FPGA development system. (Formerly Computer Engineering 221.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Jose Renau Ardevol",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 221 Advanced Microprocessor Design\nIntroduction to latest advances in computer architecture. Focuses on processor core design. Topics include simultaneous multithreading, thread level speculation, trace caches, novel out-of-order mechanisms, and energy-efficient processor core designs. Final project is modification/enhancement of an out-of-order processor on an FPGA development system. (Formerly Computer Engineering 221.)\nCredits 5\nInstructor Jose Renau Ardevol\nRequirements Prerequisite(s): CSE 220; and CSE 125, CSE 225, or equivalent Verilog experience. Concurrent enrollment in CSE 221L is required. Enrollment restricted to graduate students.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 221L Advanced Microprocessor Design Laboratory",
        "description": "Laboratory sequence illustrating topics covered in course 221. (Formerly Computer Engineering 221L.)",
        "genEd": "none",
        "credithours": "Credits 3",
        "instructor": "Instructor Jose Renau Ardevol",
        "extrarequirements": "Credits 3",
        "quarteroffered": "none",
        "fulldesc": "CSE 221L Advanced Microprocessor Design Laboratory\nLaboratory sequence illustrating topics covered in course 221. (Formerly Computer Engineering 221L.)\nCredits 3\nInstructor Jose Renau Ardevol\nRequirements Prerequisite(s): CSE 220; and CSE 125, CSE 225, or equivalent Verilog experience. Concurrent enrollment in CSE 221 is required. Enrollment restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 222A VLSI Digital System Design",
        "description": "Advanced Very Large Scale Integrated (VLSI) custom integrated circuits. Topics include: semiconductors; field-effect transistors (FETs); circuits; and interconnect simulation, along with advanced material on manufacturability, variability, short-channel devices, and non-volatile memories. Students cannot receive credit for this course and CSE 122. (Formerly Computer Engineering 222.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Matthew Guthaus",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 222A VLSI Digital System Design\nAdvanced Very Large Scale Integrated (VLSI) custom integrated circuits. Topics include: semiconductors; field-effect transistors (FETs); circuits; and interconnect simulation, along with advanced material on manufacturability, variability, short-channel devices, and non-volatile memories. Students cannot receive credit for this course and CSE 122. (Formerly Computer Engineering 222.)\nCredits 5\nInstructor Matthew Guthaus\nRequirements Prerequisite(s): CSE 122 or equivalent.\n"
    },
    {
        "coursename": "CSE 222B VLSI System-on-a-Chip Design",
        "description": "Design methodologies for Application Specific Integrated Circuits (ASICs). Topics include: behavioral specification; logic synthesis; standard-cell libraries; advanced timing analysis; and physical design automation tools. Familiarizes students with real-world tools during the design of a small system-on-a-chip project. Students are encouraged to fabricate and test their chips in an independent study. (Formerly Computer Engineering 223.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Matthew Guthaus",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 222B VLSI System-on-a-Chip Design\nDesign methodologies for Application Specific Integrated Circuits (ASICs). Topics include: behavioral specification; logic synthesis; standard-cell libraries; advanced timing analysis; and physical design automation tools. Familiarizes students with real-world tools during the design of a small system-on-a-chip project. Students are encouraged to fabricate and test their chips in an independent study. (Formerly Computer Engineering 223.)\nCredits 5\nInstructor Matthew Guthaus\nRequirements Prerequisite(s): CSE 222A or permission of instructor. Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 225 Introduction to ASIC Systems Design",
        "description": "Verilog digital logic design with emphasis on ASIC and FPGA design. Students design and verify large-scale systems. Assignments and project use the Verilog Hardware Description Language with emphasis on verification and high-frequency ASIC/FPGA targets. Course may be taught in conjunction with CSE 125.",
        "genEd": "none",
        "credithours": "Credits 7",
        "instructor": "Instructor Matthew Guthaus",
        "extrarequirements": "Credits 7",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 225 Introduction to ASIC Systems Design\nVerilog digital logic design with emphasis on ASIC and FPGA design. Students design and verify large-scale systems. Assignments and project use the Verilog Hardware Description Language with emphasis on verification and high-frequency ASIC/FPGA targets. Course may be taught in conjunction with CSE 125.\nCredits 7\nInstructor Matthew Guthaus\nRequirements Prerequisite(s): CSE 120 or CSE 220. Enrollment is restricted to graduate students; undergraduates may enroll with permission of instructor. Students with hardware background should consult instructor for permission to enroll.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 226 Advanced Parallel Processing",
        "description": "Introduction to programming advanced parallel computer architecture. Topics may include: SIMD massively parallel processor arrays; streaming parallel coprocessors, such as graphics cards used for general-purpose processing (GPGPU); or other hybrid MIMD/SIMD architectures. Course has programming lab component, a project, and student presentation on related topics. (Formerly Computer Engineering 220.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Jose Renau Ardevol, Heiner Litz, Scott Beamer",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 226 Advanced Parallel Processing\nIntroduction to programming advanced parallel computer architecture. Topics may include: SIMD massively parallel processor arrays; streaming parallel coprocessors, such as graphics cards used for general-purpose processing (GPGPU); or other hybrid MIMD/SIMD architectures. Course has programming lab component, a project, and student presentation on related topics. (Formerly Computer Engineering 220.)\nCredits 5\nInstructor Jose Renau Ardevol, Heiner Litz, Scott Beamer\nRequirements Enrollment is restricted to graduate students; undergraduates may enroll with permission of instructor.\n"
    },
    {
        "coursename": "CSE 229 Field-Programmable Gate Arrays Computer-Assisted Design",
        "description": "Design methods for Field-Programmable Gate Arrays (FGPAs), including algorithms for technology mapping, routability estimation, placement, and routing. The relationship between FPGA architectures and their computer-aided design tools. Course project involves the modification and analysis of an FPGA tool. (Formerly Computer Engineering 229.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Martine Schlag",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 229 Field-Programmable Gate Arrays Computer-Assisted Design\nDesign methods for Field-Programmable Gate Arrays (FGPAs), including algorithms for technology mapping, routability estimation, placement, and routing. The relationship between FPGA architectures and their computer-aided design tools. Course project involves the modification and analysis of an FPGA tool. (Formerly Computer Engineering 229.)\nCredits 5\nInstructor Martine Schlag\nRequirements Enrollment is restricted to graduate students or by consent of instructor. CSE 100, CSE 125, CSE 222A, CSE 225, or other digital design experience recommended.\n"
    },
    {
        "coursename": "CSE 231 Advanced Operating Systems",
        "description": "A detailed study of the issues involved in operating systems design and implementation. Readings cover current research topics and systems of historical significance. Topics include (but are not restricted to) process and memory management, protection, security, synchronization, performance evaluation, file systems, distributed systems. (Formerly Computer Science 221.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Ethan Miller, Darrell Long, Andrew Quinn",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 231 Advanced Operating Systems\nA detailed study of the issues involved in operating systems design and implementation. Readings cover current research topics and systems of historical significance. Topics include (but are not restricted to) process and memory management, protection, security, synchronization, performance evaluation, file systems, distributed systems. (Formerly Computer Science 221.)\nCredits 5\nInstructor Ethan Miller, Darrell Long, Andrew Quinn\nRequirements Enrollment is restricted to graduate students; undergraduates by interview only.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 232 Distributed Systems",
        "description": "Overview of research topics in distributed computer systems. Topics may include communication paradigms, process management, naming, synchronization and coordination, consistency and replication, fault tolerance, and security. Examples include distributed operating systems, distributed file and object systems, distributed document systems, and peer-to-peer systems. (Formerly Computer Science 232.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Ethan Miller, Darrell Long, Carl Maltzahn, Peter Alvaro, Lindsey Kuper",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 232 Distributed Systems\nOverview of research topics in distributed computer systems. Topics may include communication paradigms, process management, naming, synchronization and coordination, consistency and replication, fault tolerance, and security. Examples include distributed operating systems, distributed file and object systems, distributed document systems, and peer-to-peer systems. (Formerly Computer Science 232.)\nCredits 5\nInstructor Ethan Miller, Darrell Long, Carl Maltzahn, Peter Alvaro, Lindsey Kuper\nRequirements Enrollment is restricted to graduate students.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 233 Advanced Computer Security",
        "description": "Overview of research topics in computer and network security. Topics may include cryptographic operations, security properties and policies, authentication and access control, attacks on computer systems and defenses against them, security in programming languages, and network protocols for security. (Formerly CMPS 223.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Ethan Miller, Darrell Long, Owen Arden, Alvaro Cardenas, The Staff",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 233 Advanced Computer Security\nOverview of research topics in computer and network security. Topics may include cryptographic operations, security properties and policies, authentication and access control, attacks on computer systems and defenses against them, security in programming languages, and network protocols for security. (Formerly CMPS 223.)\nCredits 5\nInstructor Ethan Miller, Darrell Long, Owen Arden, Alvaro Cardenas, The Staff\nRequirements Enrollment is restricted to graduate students or consent of instructor.\n"
    },
    {
        "coursename": "CSE 234 Understanding Cryptography",
        "description": "Cryptography has become ubiquitous, from light bulbs to atomic weapons. This course provides both a comprehensive introduction to applied cryptography and an additional focus on the human issues caused by bad implementations, bad processes, and broken algorithms. Knowledge of C Programming, Linux, and Virtual machines is required. (Formerly Computer Engineering 236 and Computer Science 236.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Darrell Long, The Staff",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 234 Understanding Cryptography\nCryptography has become ubiquitous, from light bulbs to atomic weapons. This course provides both a comprehensive introduction to applied cryptography and an additional focus on the human issues caused by bad implementations, bad processes, and broken algorithms. Knowledge of C Programming, Linux, and Virtual machines is required. (Formerly Computer Engineering 236 and Computer Science 236.)\nCredits 5\nInstructor Darrell Long, The Staff\nRequirements Prerequisite(s): CSE 201. Enrollment is restricted to graduate students.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 235 Cyber-Physical Systems Security",
        "description": "Cyber-physical systems now permeate our lives; they include autonomous vehicles, the Internet of things, and modern control of our critical infrastructure such as the power grid. Learning about the threats against these systems and the possible defenses is essential for computer security practitioners. In this course, students read and analyze the latest published research in this area, and work on projects to address new problems.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Alvaro Cardenas",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 235 Cyber-Physical Systems Security\nCyber-physical systems now permeate our lives; they include autonomous vehicles, the Internet of things, and modern control of our critical infrastructure such as the power grid. Learning about the threats against these systems and the possible defenses is essential for computer security practitioners. In this course, students read and analyze the latest published research in this area, and work on projects to address new problems.\nCredits 5\nInstructor Alvaro Cardenas\nRequirements Enrollment is restricted to graduate students.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 237 Storage Systems",
        "description": "Topics include storage devices, storage architectures, local file systems, high-performance file systems, and next-generation storage devices and architectures; covers issues of performance, reliability, scalability, robustness, and security. (Formerly Computer Science 229.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Ethan Miller, Darrell Long, Carl Maltzahn",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 237 Storage Systems\nTopics include storage devices, storage architectures, local file systems, high-performance file systems, and next-generation storage devices and architectures; covers issues of performance, reliability, scalability, robustness, and security. (Formerly Computer Science 229.)\nCredits 5\nInstructor Ethan Miller, Darrell Long, Carl Maltzahn\nRequirements Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 240 Artificial Intelligence",
        "description": "Prepares students for doing research in artificial intelligence. Major topics covered are search and heuristics, knowledge representation, planning, deduction and inference, reinforcement learning, associative pattern retrieval, and adaptive search. Discussion includes current research issues in AI problem-solving methods. Individualized projects. (Formerly Computer Science 240.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Marilyn Walker, Narges Norouzi, Leilani Gilpin",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 240 Artificial Intelligence\nPrepares students for doing research in artificial intelligence. Major topics covered are search and heuristics, knowledge representation, planning, deduction and inference, reinforcement learning, associative pattern retrieval, and adaptive search. Discussion includes current research issues in AI problem-solving methods. Individualized projects. (Formerly Computer Science 240.)\nCredits 5\nInstructor The Staff, Marilyn Walker, Narges Norouzi, Leilani Gilpin\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 241 Knowledge Engineering",
        "description": "Introduction to the acquisition, representation, and application of knowledge in expert systems. Topics include production systems, backward and forward chaining, dependency-directed backtracking, reasoning with uncertainty, certainty factors, fuzzy systems, knowledge representation (rules, frames, and semantic nets), inference engines, and metaknowledge. Discussion includes current research issues in adaptive expert systems. Involves one major project. Undergraduates may enroll in this course if they have completed CSE 140. (Formerly Computer Science 241.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 241 Knowledge Engineering\nIntroduction to the acquisition, representation, and application of knowledge in expert systems. Topics include production systems, backward and forward chaining, dependency-directed backtracking, reasoning with uncertainty, certainty factors, fuzzy systems, knowledge representation (rules, frames, and semantic nets), inference engines, and metaknowledge. Discussion includes current research issues in adaptive expert systems. Involves one major project. Undergraduates may enroll in this course if they have completed CSE 140. (Formerly Computer Science 241.)\nCredits 5\n"
    },
    {
        "coursename": "CSE 242 Machine Learning",
        "description": "Introduction to machine learning algorithms. Covers learning models from fields of statistical decision theory and pattern recognition, artificial intelligence, and theoretical computer science. Topics include classification learning and the Probably Approximately Correct (PAC) learning framework, density estimation and Bayesian learning, EM, regression, and online learning. Provides an introduction to standard learning methods such as neural networks, decision trees, boosting, nearest neighbor, and support vector machines. Requirements include one major experimental learning project or theoretical paper. Students may not receive credit for both this course and CSE 142. (Formerly CMPS 242.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Narges Norouzi, M Warmuth, David Helmbold, Yang Liu",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 242 Machine Learning\nIntroduction to machine learning algorithms. Covers learning models from fields of statistical decision theory and pattern recognition, artificial intelligence, and theoretical computer science. Topics include classification learning and the Probably Approximately Correct (PAC) learning framework, density estimation and Bayesian learning, EM, regression, and online learning. Provides an introduction to standard learning methods such as neural networks, decision trees, boosting, nearest neighbor, and support vector machines. Requirements include one major experimental learning project or theoretical paper. Students may not receive credit for both this course and CSE 142. (Formerly CMPS 242.)\nCredits 5\nInstructor Narges Norouzi, M Warmuth, David Helmbold, Yang Liu\nRequirements Enrollment is restricted to graduate students in the computer science and engineering, computer engineering and computer science master's programs; and students in the following doctoral programs: computer science and engineering, computer engineering, computer science, applied mathematics, applied mathematics and statistics, biomolecular engineering and bioinformatics, electrical and computer engineering, electrical engineering, statistical science, and technology information management. Others may enroll by permission of the instructor.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 243 Data Mining",
        "description": "Covers the principles, algorithms, and applications of data mining, including mining sequential data, structured data, stream data, text data, spatiotemporal data, biomedical data, and other forms of complex data. Formerly TIM 245.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Yi Zhang",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 243 Data Mining\nCovers the principles, algorithms, and applications of data mining, including mining sequential data, structured data, stream data, text data, spatiotemporal data, biomedical data, and other forms of complex data. Formerly TIM 245.)\nCredits 5\nInstructor Yi Zhang\nRequirements Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 244A Foundations of Deep Learning",
        "description": "Provides foundations of deep learning algorithms and principles. Topics include neural networks, deep learning principles, deep learning architectures such as convolutional neural networks and recurrent neural networks, autoencoders, generative adversarial networks, and reinforcement learning. (CSE 244A and CSE 244B formerly offered as one course, CSE 244.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Narges Norouzi",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 244A Foundations of Deep Learning\nProvides foundations of deep learning algorithms and principles. Topics include neural networks, deep learning principles, deep learning architectures such as convolutional neural networks and recurrent neural networks, autoencoders, generative adversarial networks, and reinforcement learning. (CSE 244A and CSE 244B formerly offered as one course, CSE 244.)\nCredits 5\nInstructor Narges Norouzi\nRequirements Prerequisite(s): CSE 201 and familiarity with basic machine learning concepts. Enrollment is restricted to computer science and engineering graduate students.\n"
    },
    {
        "coursename": "CSE 244B Machine Learning for Natural Language Processing",
        "description": "Introduction to machine learning models and algorithms for Natural Language Processing. Covers deep learning approaches and traditional machine learning models. Topics include an introduction to standard neural network learning methods such as feed-forward neural networks, recurrent neural networks, convolutional neural networks, and encoder-decoder models with applications to natural language processing problems such as utterance classification and sequence tagging. Requirements include a midterm, final, programming assignments, and a project. (CSE 244A and CSE 244B formerly offered as one course, CSE 244.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Xin \"Eric\" Wang",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 244B Machine Learning for Natural Language Processing\nIntroduction to machine learning models and algorithms for Natural Language Processing. Covers deep learning approaches and traditional machine learning models. Topics include an introduction to standard neural network learning methods such as feed-forward neural networks, recurrent neural networks, convolutional neural networks, and encoder-decoder models with applications to natural language processing problems such as utterance classification and sequence tagging. Requirements include a midterm, final, programming assignments, and a project. (CSE 244A and CSE 244B formerly offered as one course, CSE 244.)\nCredits 5\nInstructor Xin \"Eric\" Wang\nRequirements Prerequisite: CSE 244A.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 245 Computational Models of Discourse and Dialogue",
        "description": "Focuses on classic and current theories and research topics in the computational modeling of discourse and dialogue, with applications to human-computer dialogue interactions; dialogue interaction in computer games and interactive story systems; and processing of human-to-human conversational and dialogue-like language such as e-mails. Topics vary depending on the current research of the instructor(s) and the interests of the students. Students read theoretical and technical papers from journals and conference proceedings and present class lectures. A research project is required.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Marilyn Walker",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 245 Computational Models of Discourse and Dialogue\nFocuses on classic and current theories and research topics in the computational modeling of discourse and dialogue, with applications to human-computer dialogue interactions; dialogue interaction in computer games and interactive story systems; and processing of human-to-human conversational and dialogue-like language such as e-mails. Topics vary depending on the current research of the instructor(s) and the interests of the students. Students read theoretical and technical papers from journals and conference proceedings and present class lectures. A research project is required.\nCredits 5\nCross Listed Courses LING 245, CMPM 245\nInstructor Marilyn Walker\nRequirements Enrollment is restricted to graduate students. Undergraduates may enroll with permission of instructor.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 246 Responsible Data Science",
        "description": "Graduate course covering basics of data science literacy and data science ethics. Topics include algorithmic discrimination, fairness, interpretability, privacy, and reproducibility. Key statistical topics such as generalization, causality, curse of dimensionality, and sampling bias are covered.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Leilani Gilpin",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 246 Responsible Data Science\nGraduate course covering basics of data science literacy and data science ethics. Topics include algorithmic discrimination, fairness, interpretability, privacy, and reproducibility. Key statistical topics such as generalization, causality, curse of dimensionality, and sampling bias are covered.\nCredits 5\nInstructor Leilani Gilpin\nRequirements Enrollment is restricted to graduate students.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 247 Projects in Artificial Intelligence",
        "description": "Overview of artificial intelligence (AI) and machine learning (ML) and principles, implementation and deployment pipeline, and approaches in solving domain-related problems. Topics covered through direct instruction, invited guest speakers, reviews of state-of-art research papers, and a team project. Students are given an opportunity to work on a quarter-long AI/ML project to be counted toward their master's degree project requirements. Enrollment is by instructor consent. Prior experience in machine learning and deep learning is required. (Formerly AI: Problem Solving and Intelligent Search.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Narges Norouzi",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 247 Projects in Artificial Intelligence\nOverview of artificial intelligence (AI) and machine learning (ML) and principles, implementation and deployment pipeline, and approaches in solving domain-related problems. Topics covered through direct instruction, invited guest speakers, reviews of state-of-art research papers, and a team project. Students are given an opportunity to work on a quarter-long AI/ML project to be counted toward their master's degree project requirements. Enrollment is by instructor consent. Prior experience in machine learning and deep learning is required. (Formerly AI: Problem Solving and Intelligent Search.)\nCredits 5\nInstructor Narges Norouzi\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 248 Foundations of Data Science",
        "description": "Examines the mathematical and algorithmic foundations of data science including high dimensional data, probabilistic inequalities, dimensionality reduction, correlation detection, streaming algorithms, and clustering. (Formerly Computer Science 218.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Yang Liu",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 248 Foundations of Data Science\nExamines the mathematical and algorithmic foundations of data science including high dimensional data, probabilistic inequalities, dimensionality reduction, correlation detection, streaming algorithms, and clustering. (Formerly Computer Science 218.)\nCredits 5\nInstructor The Staff, Yang Liu\nRequirements Prerequisite(s): CSE 201. Enrollment is restricted to graduate students.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 249 Large-Scale Web Analytics and Machine Learning",
        "description": "Provides a systematic methodology and corresponding set of methods and analytical tools in stochastic models; reinforcement learning; stochastic (neuro-)dynamic programming; Bayesian graphical models; inference; and social networks used for web analytics and machine learning to achieve business intelligence (BI) and support research and applications in computer science, computer engineering, and electrical engineering, applied mathematics and statistics, business, management, and economics. Includes exposure to Hadoop for large-scale computation. Students should have solid background in probability equivalent to statistics, stochastic, methods, calculus, (and preferably) stochastic processes and optimization, or mathematical maturity and exposure to business intelligence and algorithms. (Formerly TIM 251.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 249 Large-Scale Web Analytics and Machine Learning\nProvides a systematic methodology and corresponding set of methods and analytical tools in stochastic models; reinforcement learning; stochastic (neuro-)dynamic programming; Bayesian graphical models; inference; and social networks used for web analytics and machine learning to achieve business intelligence (BI) and support research and applications in computer science, computer engineering, and electrical engineering, applied mathematics and statistics, business, management, and economics. Includes exposure to Hadoop for large-scale computation. Students should have solid background in probability equivalent to statistics, stochastic, methods, calculus, (and preferably) stochastic processes and optimization, or mathematical maturity and exposure to business intelligence and algorithms. (Formerly TIM 251.)\nCredits 5\nInstructor The Staff\nRequirements Prerequisite(s): CSE 107 or STAT 131 or permission of instructor. Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 250A Computer Networks",
        "description": "Issues resulting from organizing communication among autonomous computers. Includes network models and switching techniques; medium access control protocols and local area networks; error control and retransmission strategies; routing algorithms and protocols; congestion control mechanisms and end-to-end protocols; application-level protocols; and application of concepts to wireless and wireline networks, with emphasis on the Internet. (Formerly Computer Engineering 252A.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Jose Garcia-Luna-Aceves, Katia Obraczka, Chen Qian",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 250A Computer Networks\nIssues resulting from organizing communication among autonomous computers. Includes network models and switching techniques; medium access control protocols and local area networks; error control and retransmission strategies; routing algorithms and protocols; congestion control mechanisms and end-to-end protocols; application-level protocols; and application of concepts to wireless and wireline networks, with emphasis on the Internet. (Formerly Computer Engineering 252A.)\nCredits 5\nInstructor Jose Garcia-Luna-Aceves, Katia Obraczka, Chen Qian\nRequirements Enrollment is restricted to graduate students.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 250B Principles of Computer Communication",
        "description": "Focuses on the design and analysis of protocols for computer communication. Topics include: the safety, liveliness, and performance of communication protocols for medium access control (MAC); link control; routing and switching; multicasting; and end-to-end transport. Students cannot receive credit for this course and CSE 152. (Formerly CMPE 252B.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Jose Garcia-Luna-Aceves",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 250B Principles of Computer Communication\nFocuses on the design and analysis of protocols for computer communication. Topics include: the safety, liveliness, and performance of communication protocols for medium access control (MAC); link control; routing and switching; multicasting; and end-to-end transport. Students cannot receive credit for this course and CSE 152. (Formerly CMPE 252B.)\nCredits 5\nInstructor Jose Garcia-Luna-Aceves\nRequirements Prerequisite(s): CSE 250A. Enrollment is restricted to graduate students.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 250C High Speed Computer Networks",
        "description": "Fiber-optic technology; fiber-optic link design; network protocol concepts; coding and error control; high-speed local area and metropolitan area networks; gigabit networks; error and congestion control; photonic networks; research topics. (Formerly Computer Engineering 254.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Anujan Varma",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 250C High Speed Computer Networks\nFiber-optic technology; fiber-optic link design; network protocol concepts; coding and error control; high-speed local area and metropolitan area networks; gigabit networks; error and congestion control; photonic networks; research topics. (Formerly Computer Engineering 254.)\nCredits 5\nInstructor Anujan Varma\nRequirements Prerequisite(s): CSE 250B.\n"
    },
    {
        "coursename": "CSE 253 Network Security",
        "description": "Fundamental mechanisms for network security and their application in widely deployed protocols. In-depth treatment of security mechanism at the data-link, network, and transport layers for both wired and wireless networks. Covers mechanisms for privacy and integrity, and methods for intrusion detection. (Formerly CMPE 253.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Anujan Varma, Chen Qian",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 253 Network Security\nFundamental mechanisms for network security and their application in widely deployed protocols. In-depth treatment of security mechanism at the data-link, network, and transport layers for both wired and wireless networks. Covers mechanisms for privacy and integrity, and methods for intrusion detection. (Formerly CMPE 253.)\nCredits 5\nInstructor Anujan Varma, Chen Qian\nRequirements Prerequisite(s): CSE 250A and CSE 201. Enrollment restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 257 Wireless and Mobile Networks",
        "description": "An interdisciplinary course on wireless communication and mobile computing. Covers the physical aspects of wireless communication but emphasizes higher protocol layers. Topics include cellular networks, packet radio and ad hoc networks, wireless transport protocols, security, and application-level issues. (Formerly Computer Engineering 257.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Jose Garcia-Luna-Aceves, Katia Obraczka, Chen Qian",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 257 Wireless and Mobile Networks\nAn interdisciplinary course on wireless communication and mobile computing. Covers the physical aspects of wireless communication but emphasizes higher protocol layers. Topics include cellular networks, packet radio and ad hoc networks, wireless transport protocols, security, and application-level issues. (Formerly Computer Engineering 257.)\nCredits 5\nInstructor Jose Garcia-Luna-Aceves, Katia Obraczka, Chen Qian\nRequirements Prerequisite(s): CSE 250A or permission of instructor.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 259 Sensor Networks",
        "description": "Focuses on the networking aspects of sensor networks: protocols at the various layers and how they answer the specific requirements posed by these networks (e.g., data driven, energy efficient, etc.) and their applications (monitoring, tracking, etc.). Explores how physical layer and hardware issues may influence protocol design. (Formerly Computer Engineering 259.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Katia Obraczka, Chen Qian",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 259 Sensor Networks\nFocuses on the networking aspects of sensor networks: protocols at the various layers and how they answer the specific requirements posed by these networks (e.g., data driven, energy efficient, etc.) and their applications (monitoring, tracking, etc.). Explores how physical layer and hardware issues may influence protocol design. (Formerly Computer Engineering 259.)\nCredits 5\nInstructor Katia Obraczka, Chen Qian\nRequirements Prerequisite(s): CSE 250A. CSE 257 is recommended as a prerequisite.\n"
    },
    {
        "coursename": "CSE 260 Computer Graphics",
        "description": "Introduces current research and techniques of modeling, 2D/3D transformation, matrix composition, shading algorithms, and rendering to obtain computer-generated imagery. Programming assignments and major project required. Students cannot receive credit for both this course and CSE 160. (Formerly Computer Science 260.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Alex Pang, James Davis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 260 Computer Graphics\nIntroduces current research and techniques of modeling, 2D/3D transformation, matrix composition, shading algorithms, and rendering to obtain computer-generated imagery. Programming assignments and major project required. Students cannot receive credit for both this course and CSE 160. (Formerly Computer Science 260.)\nCredits 5\nInstructor Alex Pang, James Davis\nRequirements Enrollment is restricted to graduate students; undergraduates by interview only.\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 261 Advanced Visualization",
        "description": "Covers advanced topics in visualization, e.g., tensor-field visualization, uncertainty visualization, information visualization. Topics vary with differing offerings of the course. Course includes lectures, exam, research paper reading/presentation, and projects. Final project is expected to be at a sufficiently advanced level for submission to a conference. Students work individually or in pairs. (Formerly Computer Science 261.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Alex Pang",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 261 Advanced Visualization\nCovers advanced topics in visualization, e.g., tensor-field visualization, uncertainty visualization, information visualization. Topics vary with differing offerings of the course. Course includes lectures, exam, research paper reading/presentation, and projects. Final project is expected to be at a sufficiently advanced level for submission to a conference. Students work individually or in pairs. (Formerly Computer Science 261.)\nCredits 5\nInstructor Alex Pang\nRequirements Enrollment is restricted to graduate students.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 262 Computer Animation",
        "description": "An in-depth treatment of computer animation, including its origins in conventional animation, 2-D animation, inbetweening, motion control, morphing, graphical motion editors, animation languages, motion blur, simulation of articulated body motion, real-time animation, and special-purpose animation hardware. (Formerly Computer Science 262.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Alex Pang, James Davis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 262 Computer Animation\nAn in-depth treatment of computer animation, including its origins in conventional animation, 2-D animation, inbetweening, motion control, morphing, graphical motion editors, animation languages, motion blur, simulation of articulated body motion, real-time animation, and special-purpose animation hardware. (Formerly Computer Science 262.)\nCredits 5\nInstructor Alex Pang, James Davis\nRequirements Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 263 Data Driven Discovery and Visualization",
        "description": "Explores high-quality interdisciplinary research using socio-economic data and software available on the Internet, and data curation, computation, and visualization to strengthen scientific inquiry to bear on large-scale societal problems. Applications include inequality, poverty, water, energy, environment, health, education, and democracy. Enrollment restricted to graduate students. Enrollment by instructor consent. (Formerly Computer Science 263.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Suresh Lodha",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 263 Data Driven Discovery and Visualization\nExplores high-quality interdisciplinary research using socio-economic data and software available on the Internet, and data curation, computation, and visualization to strengthen scientific inquiry to bear on large-scale societal problems. Applications include inequality, poverty, water, energy, environment, health, education, and democracy. Enrollment restricted to graduate students. Enrollment by instructor consent. (Formerly Computer Science 263.)\nCredits 5\nInstructor Suresh Lodha\n"
    },
    {
        "coursename": "CSE 264 Computer Vision",
        "description": "Introduces general concepts in computer vision, with an emphasis on geometric 3D reconstruction. Topics include radiometry, photometry, projective geometry, geometric camera model, epipolar geometry, stereo depth reconstruction, corner and edge features, point descriptors and matching, and optical flow. (Formerly Computer Engineering 264.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Roberto Manduchi",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 264 Computer Vision\nIntroduces general concepts in computer vision, with an emphasis on geometric 3D reconstruction. Topics include radiometry, photometry, projective geometry, geometric camera model, epipolar geometry, stereo depth reconstruction, corner and edge features, point descriptors and matching, and optical flow. (Formerly Computer Engineering 264.)\nCredits 5\nInstructor Roberto Manduchi\nRequirements Enrollment is restricted to graduate students. Undergraduate students who are interested in enrolling should meet with the instructor first.\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 265 Human-Computer Interaction",
        "description": "Theory and hands-on practice to understand what makes user interfaces usable and accessible to diverse individuals. Covers human senses and memory and their design implications, requirement solicitation, user-centered design and prototyping techniques, and expert and user evaluations. Individual research project. Interdisciplinary course for art, social science and engineering graduate students. Students cannot receive credit for this course and CSE 165.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 265 Human-Computer Interaction\nTheory and hands-on practice to understand what makes user interfaces usable and accessible to diverse individuals. Covers human senses and memory and their design implications, requirement solicitation, user-centered design and prototyping techniques, and expert and user evaluations. Individual research project. Interdisciplinary course for art, social science and engineering graduate students. Students cannot receive credit for this course and CSE 165.\nCredits 5\nCross Listed Courses DANM 231\nRequirements Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 272 Information Retrieval",
        "description": "Course covers major topics of information retrieval including: characteristics and representation of text, several important retrieval and ranking models, content recommendation and classification; distributed or federated search, AI semantics and dialog for information access; human factors and interfaces; and evaluation, and domain-specific applications. A research project is required. (Formerly TIM 260.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Yi Zhang",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 272 Information Retrieval\nCourse covers major topics of information retrieval including: characteristics and representation of text, several important retrieval and ranking models, content recommendation and classification; distributed or federated search, AI semantics and dialog for information access; human factors and interfaces; and evaluation, and domain-specific applications. A research project is required. (Formerly TIM 260.)\nCredits 5\nInstructor Yi Zhang\nRequirements Enrollment is restricted to graduate students. Undergraduates may enroll with permission of instructor.\n"
    },
    {
        "coursename": "CSE 276 Optimization Theory and Applications",
        "description": "A first graduate course in optimization with an emphasis on problems arising in management and engineering applications. Objectives are to become experts in problem formulation, comfortable with software for solving these problems, and familiar with analytical methods behind these solver technologies. (Formerly TIM 206.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor John Musacchio",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 276 Optimization Theory and Applications\nA first graduate course in optimization with an emphasis on problems arising in management and engineering applications. Objectives are to become experts in problem formulation, comfortable with software for solving these problems, and familiar with analytical methods behind these solver technologies. (Formerly TIM 206.)\nCredits 5\nInstructor John Musacchio\nRequirements Prerequisite(s): calculus and linear algebra. Enrollment is restricted to graduate students.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 277 Random Process Models in Engineering",
        "description": "A first graduate course in stochastic process modeling and analysis with an emphasis on applications in technology management, information systems design, and engineering. (Formerly TIM 207.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor John Musacchio",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 277 Random Process Models in Engineering\nA first graduate course in stochastic process modeling and analysis with an emphasis on applications in technology management, information systems design, and engineering. (Formerly TIM 207.)\nCredits 5\nInstructor John Musacchio\nRequirements Enrollment is restricted to graduate students. Prerequisite: CSE 107 or other undergraduate probability course recommended.\n"
    },
    {
        "coursename": "CSE 279 Data Mining and Business Analytics in Knowledge Services",
        "description": "Provides students with systematic methodology and analytical tools in data and text mining and business analytics. Also provides an integrated perspective and examines use of these methods in the field of knowledge services, such as online marketing, sponsored search, health care, financial services, recommender systems, etc. Includes training in the basic elements of stochastic optimization and other algorithmic approaches, such as stochastic dynamic programming, statistics, constrained optimization, and machine learning with exposure to software tools. These methods enable firms to achieve rapid, effective, and profitable optimization of knowledge-services management. (Formerly TIM 209.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 279 Data Mining and Business Analytics in Knowledge Services\nProvides students with systematic methodology and analytical tools in data and text mining and business analytics. Also provides an integrated perspective and examines use of these methods in the field of knowledge services, such as online marketing, sponsored search, health care, financial services, recommender systems, etc. Includes training in the basic elements of stochastic optimization and other algorithmic approaches, such as stochastic dynamic programming, statistics, constrained optimization, and machine learning with exposure to software tools. These methods enable firms to achieve rapid, effective, and profitable optimization of knowledge-services management. (Formerly TIM 209.)\nCredits 5\nRequirements Enrollment is restricted to graduate students. Students are expected to have undergraduate preparation in probability and statistics. Undergraduates may enroll with instructor approval.\n"
    },
    {
        "coursename": "CSE 280A Seminar in Computer Science and Engineering",
        "description": "Weekly seminar covering topics of current research in computer science. Enrollment by permission of instructor. (Formerly CMPS 280A, Seminar in Computer Science Research.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor The Staff, Marilyn Walker",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 280A Seminar in Computer Science and Engineering\nWeekly seminar covering topics of current research in computer science. Enrollment by permission of instructor. (Formerly CMPS 280A, Seminar in Computer Science Research.)\nCredits 2\nInstructor The Staff, Marilyn Walker\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 280D Seminar in Database Systems",
        "description": "Covers advanced research topics from the recent literature in database systems and related fields. Involves presentations from UCSC students and faculty, and guest talks from researchers in industry and other academic institutions. Enrollment by permission of instructor. (Formerly 280D.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Peter Alvaro, Faisal Nawab",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter",
        "fulldesc": "CSE 280D Seminar in Database Systems\nCovers advanced research topics from the recent literature in database systems and related fields. Involves presentations from UCSC students and faculty, and guest talks from researchers in industry and other academic institutions. Enrollment by permission of instructor. (Formerly 280D.)\nCredits 2\nInstructor Peter Alvaro, Faisal Nawab\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter\n"
    },
    {
        "coursename": "CSE 280F Seminar on Software Engineering",
        "description": "Weekly seminar covering topics of current research in software engineering. (Formerly CMPS 280G.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Cormac Flanagan, Luca De Alfaro",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 280F Seminar on Software Engineering\nWeekly seminar covering topics of current research in software engineering. (Formerly CMPS 280G.)\nCredits 2\nInstructor Cormac Flanagan, Luca De Alfaro\nRequirements Prerequisite(s): Enrollment is restricted to graduate students.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 280G VLSI/CAD Seminar",
        "description": "Weekly seminar on advanced topics in VLSI and computer-aided design (CAD). Students present and discuss modern issues in semiconductor design, fabrication, and CAD. Frequent guest speakers present pertinent results from industry and academia. (Formerly Computer Engineering 280G.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Matthew Guthaus",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 280G VLSI/CAD Seminar\nWeekly seminar on advanced topics in VLSI and computer-aided design (CAD). Students present and discuss modern issues in semiconductor design, fabrication, and CAD. Frequent guest speakers present pertinent results from industry and academia. (Formerly Computer Engineering 280G.)\nCredits 2\nInstructor Matthew Guthaus\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 280H Seminar in Human Computation Systems",
        "description": "Covers advanced topics and current research in the general area of human computation. Material is drawn from several disciplines that involve or deal with human computation, including computer vision, human-computer interaction, databases, and machine learning. The course comprises presentations from faculty, enrolled students, and external visitors. (Formerly CMPS 280H.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor James Davis",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 280H Seminar in Human Computation Systems\nCovers advanced topics and current research in the general area of human computation. Material is drawn from several disciplines that involve or deal with human computation, including computer vision, human-computer interaction, databases, and machine learning. The course comprises presentations from faculty, enrolled students, and external visitors. (Formerly CMPS 280H.)\nCredits 2\nInstructor James Davis\nRequirements Enrollment is restricted to graduate students.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 280I Seminar on Information Retrieval and Knowledge Management",
        "description": "Seminar series discussing advanced topics in information retrieval and knowledge management. Current research and literature are presented during each meeting. (Formerly 280I.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor The Staff, Ramakrishna Akella",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 280I Seminar on Information Retrieval and Knowledge Management\nSeminar series discussing advanced topics in information retrieval and knowledge management. Current research and literature are presented during each meeting. (Formerly 280I.)\nCredits 2\nInstructor The Staff, Ramakrishna Akella\nRequirements Enrollment is restricted to graduate students.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 280J Seminar on Computer Graphics",
        "description": "Weekly seminar covering topics of current research in computer graphics. Enrollment restricted to graduate students and by permission of instructor. (Formerly CMPS 280J.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor James Davis, Alex Pang, Suresh Lodha",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 280J Seminar on Computer Graphics\nWeekly seminar covering topics of current research in computer graphics. Enrollment restricted to graduate students and by permission of instructor. (Formerly CMPS 280J.)\nCredits 2\nInstructor James Davis, Alex Pang, Suresh Lodha\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 280K Sales and Marketing for Technologists and Engineers",
        "description": "Perspective on the theory, plus examples, and tools useful to technologists and engineers for successfully guiding and supporting sales and marketing endeavors and, thereby, ensuring funding, staffing, product appeal, positive customer relationships, and marketplace success. (Formerly TIM 280M.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 280K Sales and Marketing for Technologists and Engineers\nPerspective on the theory, plus examples, and tools useful to technologists and engineers for successfully guiding and supporting sales and marketing endeavors and, thereby, ensuring funding, staffing, product appeal, positive customer relationships, and marketplace success. (Formerly TIM 280M.)\nCredits 2\n"
    },
    {
        "coursename": "CSE 280L Seminar on Logic in Computer Science",
        "description": "Covers advanced research topics from the recent literature in the uses of logic in computer science with particular emphasis on the applications of logic to the representation and the management of data. Involves presentations from UCSC students and faculty, and guest talks from researchers in other academic institutions or industrial research labs. Enrollment is by permission of the instructor and is restricted to graduate students. (Formerly CMPS 280L.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Phokion Kolaitis",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 280L Seminar on Logic in Computer Science\nCovers advanced research topics from the recent literature in the uses of logic in computer science with particular emphasis on the applications of logic to the representation and the management of data. Involves presentations from UCSC students and faculty, and guest talks from researchers in other academic institutions or industrial research labs. Enrollment is by permission of the instructor and is restricted to graduate students. (Formerly CMPS 280L.)\nCredits 2\nInstructor Phokion Kolaitis\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 280M Seminar on Machine Learning",
        "description": "Weekly seminar covering topics of current interest in machine learning. Enrollment is by permission of the instructor. Enrollment is restricted to graduate students. (Formerly CMPS 280M.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Manfred Warmuth, David Helmbold, Lise Getoor, Luca De Alfaro, Narges Norouzi, Yang Liu",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 280M Seminar on Machine Learning\nWeekly seminar covering topics of current interest in machine learning. Enrollment is by permission of the instructor. Enrollment is restricted to graduate students. (Formerly CMPS 280M.)\nCredits 2\nInstructor Manfred Warmuth, David Helmbold, Lise Getoor, Luca De Alfaro, Narges Norouzi, Yang Liu\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 280N Seminar on Networks",
        "description": "Weekly seminar series covering topics of current research in networks and networked systems. Current research work and literature in these areas are discussed. Prerequisite(s): permission of instructor. Enrollment is restricted to graduate students. (Formerly Computer Engineering 280N.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Jose Garcia-Luna-Aceves, Katia Obraczka, Chen Qian",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 280N Seminar on Networks\nWeekly seminar series covering topics of current research in networks and networked systems. Current research work and literature in these areas are discussed. Prerequisite(s): permission of instructor. Enrollment is restricted to graduate students. (Formerly Computer Engineering 280N.)\nCredits 2\nInstructor Jose Garcia-Luna-Aceves, Katia Obraczka, Chen Qian\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 280O Seminar in Applied Programming Languages",
        "description": "Covers current research in language-based approaches to security, distributed systems, databases, and formal verification. Students read and present papers from academic journals and conferences.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Owen Arden, Lindsey Kuper",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 280O Seminar in Applied Programming Languages\nCovers current research in language-based approaches to security, distributed systems, databases, and formal verification. Students read and present papers from academic journals and conferences.\nCredits 2\nInstructor Owen Arden, Lindsey Kuper\nRequirements Enrollment is restricted to graduate students, or by permission of the instructor.\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 280P Seminar on Parallel Processing",
        "description": "Weekly seminar series covering topics of current research in parallel systems, architectures, and algorithms. Current research work and literature in these areas are discussed. (Formerly Computer Engineering 280P.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Jose Renau Ardevol",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 280P Seminar on Parallel Processing\nWeekly seminar series covering topics of current research in parallel systems, architectures, and algorithms. Current research work and literature in these areas are discussed. (Formerly Computer Engineering 280P.)\nCredits 2\nInstructor Jose Renau Ardevol\nRequirements Enrollment is restricted to graduate students.\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 280S Seminar on Computer Systems",
        "description": "Weekly seminar series covering topics of current research in computer systems. Enrollment by permission of instructor. (Formerly CMPS 280S AND CMPE 280S.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Ethan Miller, Darrell Long, Carlos Maltzahn, Heiner Litz",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 280S Seminar on Computer Systems\nWeekly seminar series covering topics of current research in computer systems. Enrollment by permission of instructor. (Formerly CMPS 280S AND CMPE 280S.)\nCredits 2\nInstructor Ethan Miller, Darrell Long, Carlos Maltzahn, Heiner Litz\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 280T Seminar on New Technologies",
        "description": "Weekly seminar series in which distinguished speakers from industry, universities, and government discuss current developments in networking and computer technology. The emphasis is on open research questions that may lead to collaborative work with faculty and graduate students. (Formerly Computer Engineering 280T.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 280T Seminar on New Technologies\nWeekly seminar series in which distinguished speakers from industry, universities, and government discuss current developments in networking and computer technology. The emphasis is on open research questions that may lead to collaborative work with faculty and graduate students. (Formerly Computer Engineering 280T.)\nCredits 2\n"
    },
    {
        "coursename": "CSE 280V Seminar on Computer Vision",
        "description": "Weekly graduate-level seminar series discussing advanced topics in computer vision and image analysis. Current research and literature presented during each meeting. Enrollment is by permission of the instructor. Enrollment is restricted to graduate students. (Formerly Computer Engineering 280V.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Roberto Manduchi",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 280V Seminar on Computer Vision\nWeekly graduate-level seminar series discussing advanced topics in computer vision and image analysis. Current research and literature presented during each meeting. Enrollment is by permission of the instructor. Enrollment is restricted to graduate students. (Formerly Computer Engineering 280V.)\nCredits 2\nInstructor Roberto Manduchi\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 280X Seminar in Distributed Systems",
        "description": "Covers advanced research topics from the recent literature in distributed systems and related fields. Involves presentations from UCSC students and faculty. Enrollment is restricted to graduate students and by permission of the instructor.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Peter Alvaro",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 280X Seminar in Distributed Systems\nCovers advanced research topics from the recent literature in distributed systems and related fields. Involves presentations from UCSC students and faculty. Enrollment is restricted to graduate students and by permission of the instructor.\nCredits 2\nInstructor Peter Alvaro\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 280Z Seminar in Natural Language Processing and Dialogue",
        "description": "Covers advanced topics and current research in natural language processing. Focuses on student presentations and seminar participation. Enrollment is restricted to graduate students. Enrollment is by permission of the instructor. (Formerly CMPS 280Z.)",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "Instructor Marilyn Walker",
        "extrarequirements": "Credits 2",
        "quarteroffered": "none",
        "fulldesc": "CSE 280Z Seminar in Natural Language Processing and Dialogue\nCovers advanced topics and current research in natural language processing. Focuses on student presentations and seminar participation. Enrollment is restricted to graduate students. Enrollment is by permission of the instructor. (Formerly CMPS 280Z.)\nCredits 2\nInstructor Marilyn Walker\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 285 Technical Writing for Engineering Graduates",
        "description": "Writing skills development for graduate engineers. Students produce a major writing project with many subtasks. Exercises includes fellowship application; mathematical and algorithmic description; use of tables and graphs; experiment description; and producing technical web sites, presentations, and posters. Enrollment is restricted to graduate students in biomolecular engineering, computer science and engineering, computer science, and electrical and computer engineering and by permission of the instructor. (Formerly CMPE 285.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Tracy Larrabee",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 285 Technical Writing for Engineering Graduates\nWriting skills development for graduate engineers. Students produce a major writing project with many subtasks. Exercises includes fellowship application; mathematical and algorithmic description; use of tables and graphs; experiment description; and producing technical web sites, presentations, and posters. Enrollment is restricted to graduate students in biomolecular engineering, computer science and engineering, computer science, and electrical and computer engineering and by permission of the instructor. (Formerly CMPE 285.)\nCredits 5\nInstructor Tracy Larrabee\n"
    },
    {
        "coursename": "CSE 290A Topics in Algorithms and Complexity Theory: Probabilistic Algorithms and Average Case Analysis",
        "description": "Graduate seminar in algorithms and complexity theory on topics from recently published research journal articles and conference proceedings. Topics vary from year to year depending on the current research of the instructor(s) and interests of students. Students read technical papers from relevant journals and conference proceedings and present class lectures. Guest lectures may supplement the student presentations. A research project and/or paper may be required. (Formerly Computer Science 290A.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Seshadhri Comandur, Evangelos Chatziafratis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 290A Topics in Algorithms and Complexity Theory: Probabilistic Algorithms and Average Case Analysis\nGraduate seminar in algorithms and complexity theory on topics from recently published research journal articles and conference proceedings. Topics vary from year to year depending on the current research of the instructor(s) and interests of students. Students read technical papers from relevant journals and conference proceedings and present class lectures. Guest lectures may supplement the student presentations. A research project and/or paper may be required. (Formerly Computer Science 290A.)\nCredits 5\nInstructor The Staff, Seshadhri Comandur, Evangelos Chatziafratis\nRequirements Enrollment is restricted to graduate students.\nRepeatable For Credit Yes\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 290C Advanced Topics in Machine Learning",
        "description": "In-depth study of current research topics in machine learning. Topics vary from year to year but include multi-class learning with boosting and SUM algorithms, belief nets, independent component analysis, MCMC sampling, and advanced clustering methods. Students read and present research papers; theoretical homework in addition to a research project. (Formerly Computer Science 290C.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor David Helmbold, Lise Getoor, Xin \"Eric\" Wang, Cihang Xie",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter, Spring",
        "fulldesc": "CSE 290C Advanced Topics in Machine Learning\nIn-depth study of current research topics in machine learning. Topics vary from year to year but include multi-class learning with boosting and SUM algorithms, belief nets, independent component analysis, MCMC sampling, and advanced clustering methods. Students read and present research papers; theoretical homework in addition to a research project. (Formerly Computer Science 290C.)\nCredits 5\nInstructor David Helmbold, Lise Getoor, Xin \"Eric\" Wang, Cihang Xie\nRequirements Prerequisite(s): CSE 242.\nRepeatable For Credit Yes\nQuarter Offered Winter, Spring\n"
    },
    {
        "coursename": "CSE 290D Neural Computation",
        "description": "An introduction to the design and analysis of neural network algorithms. Concentrates on large artificial neural networks and their applications in pattern recognition, signal processing, and forecasting and control. Topics include Hopfield and Boltzmann machines, perceptions, multilayer feed forward nets, and multilayer recurrent networks. (Formerly Computer Science 290D.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Manfred Warmuth, Yuyin Zhou",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 290D Neural Computation\nAn introduction to the design and analysis of neural network algorithms. Concentrates on large artificial neural networks and their applications in pattern recognition, signal processing, and forecasting and control. Topics include Hopfield and Boltzmann machines, perceptions, multilayer feed forward nets, and multilayer recurrent networks. (Formerly Computer Science 290D.)\nCredits 5\nInstructor Manfred Warmuth, Yuyin Zhou\nRequirements Enrollment is restricted to graduate students.\nRepeatable For Credit Yes\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 290E Object-Oriented Programming Methodology",
        "description": "Object-oriented programming methodology is the application of abstract-data types and polymorphism to coding solution. Topics geared to beginning thesis research in this field. (Formerly Computer Science 290E.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290E Object-Oriented Programming Methodology\nObject-oriented programming methodology is the application of abstract-data types and polymorphism to coding solution. Topics geared to beginning thesis research in this field. (Formerly Computer Science 290E.)\nCredits 5\nRequirements Prerequisite(s): CSE 201 and CSE 210A. Enrollment is restricted to graduate students.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 290F Applications of Combinatorics",
        "description": "Combinatorial mathematics, including summation methods, working with binomial coefficients, combinatorial sequences (Fibonacci, Stirling, Eulerian, Harmonic, Bernoulli numbers), generating functions and their uses, Bernoulli processes, and other topics in discrete probability. Oriented toward problem solving, applications mainly to computer science, but also physics. (Formerly Computer Science 290F.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290F Applications of Combinatorics\nCombinatorial mathematics, including summation methods, working with binomial coefficients, combinatorial sequences (Fibonacci, Stirling, Eulerian, Harmonic, Bernoulli numbers), generating functions and their uses, Bernoulli processes, and other topics in discrete probability. Oriented toward problem solving, applications mainly to computer science, but also physics. (Formerly Computer Science 290F.)\nCredits 5\nRequirements Prerequisite(s): CSE 16 and AM 10. Enrollment is restricted to graduate students and upper-division undergraduates.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 290G Topics in Software Engineering",
        "description": "Research seminar on current topics in software engineering. Topics vary from year to year depending on the current research of the instructor(s) and interests of students. Students read technical papers from relevant journals and conference proceedings. Synthesis and understanding of materials is demonstrated by a required research project. (Formerly Computer Science 290G.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Jim Whitehead, Cormac Flanagan, Luca De Alfaro",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290G Topics in Software Engineering\nResearch seminar on current topics in software engineering. Topics vary from year to year depending on the current research of the instructor(s) and interests of students. Students read technical papers from relevant journals and conference proceedings. Synthesis and understanding of materials is demonstrated by a required research project. (Formerly Computer Science 290G.)\nCredits 5\nInstructor Jim Whitehead, Cormac Flanagan, Luca De Alfaro\nRequirements Prerequisite(s): CSE 212A recommended. Enrollment is restricted to graduate students; undergraduates may enroll with permission of instructor.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 290H Topics in Database Systems",
        "description": "Focuses on current research topics in database systems. Different offerings cover different topics depending on current research of instructor(s) and the interests of students. Students read technical papers from journals and conference proceedings and present class lectures. A research project is required. (Formerly Computer Science 290H.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Phokion Kolaitis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290H Topics in Database Systems\nFocuses on current research topics in database systems. Different offerings cover different topics depending on current research of instructor(s) and the interests of students. Students read technical papers from journals and conference proceedings and present class lectures. A research project is required. (Formerly Computer Science 290H.)\nCredits 5\nInstructor Phokion Kolaitis\nRequirements Prerequisite(s): CSE 180 (or equivalent) or CSE 214 or consent of instructor. Enrollment is restricted to graduate students.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 290J Advanced Topics in Computer Graphics and Visual Computing",
        "description": "A graduate seminar in computer graphics on topics from recently published research journal articles and conference proceedings. Topics vary from year to year depending on interests of students. Primary areas of interest are likely to be scientific visualization, modeling, rendering, scattered data techniques, wavelets, and color and vision models. Students read technical papers and present class lectures. Guest lecturers supplement the student presentations. A research project is required. (Formerly Computer Science 290B.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Alex Pang, Suresh Lodha, James Davis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290J Advanced Topics in Computer Graphics and Visual Computing\nA graduate seminar in computer graphics on topics from recently published research journal articles and conference proceedings. Topics vary from year to year depending on interests of students. Primary areas of interest are likely to be scientific visualization, modeling, rendering, scattered data techniques, wavelets, and color and vision models. Students read technical papers and present class lectures. Guest lecturers supplement the student presentations. A research project is required. (Formerly Computer Science 290B.)\nCredits 5\nInstructor Alex Pang, Suresh Lodha, James Davis\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 290K Advanced Topics in Natural Language Processing",
        "description": "Teaches participants about current methods and directions in active areas of Natural Language Processing research and applications. Students perform independent research and hone skills with state-of-the-art NLP tools and techniques.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Snigdha Chaturvedi",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290K Advanced Topics in Natural Language Processing\nTeaches participants about current methods and directions in active areas of Natural Language Processing research and applications. Students perform independent research and hone skills with state-of-the-art NLP tools and techniques.\nCredits 5\nInstructor Snigdha Chaturvedi\nRequirements Enrollment is restricted to computer science and engineering, computer engineering, computer science, and technology management graduate students.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 290L Topics in Crowdsourcing and Collaboration",
        "description": "Explores the foundations of crowdsourcing and computer-mediated collaboration. Covers the algorithmic and statistical foundations of crowdsourcing, introducing and analyzing algorithms, and experimenting with concrete systems. Also, provides an introduction to computational systems for mediating user interaction and collaboration. (Formerly Computer Science 290L.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Luca De Alfaro",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290L Topics in Crowdsourcing and Collaboration\nExplores the foundations of crowdsourcing and computer-mediated collaboration. Covers the algorithmic and statistical foundations of crowdsourcing, introducing and analyzing algorithms, and experimenting with concrete systems. Also, provides an introduction to computational systems for mediating user interaction and collaboration. (Formerly Computer Science 290L.)\nCredits 5\nInstructor Luca De Alfaro\nRequirements Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 290M Topics in Parallel Computation",
        "description": "Investigates selected topics in applied parallel computation. Topics may include numerical methods, artificial intelligence and machine learning algorithms, graphics and image processing, systolic algorithms, and the interplay between hardware and algorithms. Students are encouraged to investigate and discuss the parallelization of their own research. (Formerly Computer Engineering 290M.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290M Topics in Parallel Computation\nInvestigates selected topics in applied parallel computation. Topics may include numerical methods, artificial intelligence and machine learning algorithms, graphics and image processing, systolic algorithms, and the interplay between hardware and algorithms. Students are encouraged to investigate and discuss the parallelization of their own research. (Formerly Computer Engineering 290M.)\nCredits 5\nRequirements Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 290N Topics in Computer Performance",
        "description": "Selected topics of current interest in the area of computer system performance. Subjects may include aspects of large systems, performability, computer networks, storage subsystems, and nontraditional approaches and are subject to periodic revision. (Formerly Computer Engineering 290N.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Chen Qian",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290N Topics in Computer Performance\nSelected topics of current interest in the area of computer system performance. Subjects may include aspects of large systems, performability, computer networks, storage subsystems, and nontraditional approaches and are subject to periodic revision. (Formerly Computer Engineering 290N.)\nCredits 5\nInstructor Chen Qian\nRequirements Enrollment is restricted to graduate students.\n"
    },
    {
        "coursename": "CSE 290O Algorithmic Foundations of Convex Optimization",
        "description": "Focuses on some of the foundational aspects of convex and its relationship to modern machine learning. Discusses positive results--how can you solve convex optimization problems--and negative ones with statements like This family of problems is too hard to be solved in reasonable time. Course is divided into three parts, each exploring a different aspect of convex optimization: 1) algorithmic frameworks; 2) Oracle complexities; 3) the power of randomness. Through this course students are exposed to general concepts of convex geometry, learning theory, and rigorous proofs. (formerly CMPS 290O.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Abhradeep Guha Thakurta",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290O Algorithmic Foundations of Convex Optimization\nFocuses on some of the foundational aspects of convex and its relationship to modern machine learning. Discusses positive results--how can you solve convex optimization problems--and negative ones with statements like This family of problems is too hard to be solved in reasonable time. Course is divided into three parts, each exploring a different aspect of convex optimization: 1) algorithmic frameworks; 2) Oracle complexities; 3) the power of randomness. Through this course students are exposed to general concepts of convex geometry, learning theory, and rigorous proofs. (formerly CMPS 290O.)\nCredits 5\nInstructor Abhradeep Guha Thakurta\nRequirements Prerequisite(s): CSE 201 and CSE 242. Enrollment is restricted to computer engineering and computer science graduate students.\n"
    },
    {
        "coursename": "CSE 290P Data Privacy Via Machine Learning, and Back",
        "description": "Helps students achieve both expository knowledge and expertise in the field of data privacy. Focuses on fundamental techniques used in designing privacy-preserving, machine-learning systems in both academia and in the industry. Students are expected to read and understand recent research papers in the topic. (Formerly Computer Science 290P.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Abhradeep Guha Thakurta",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290P Data Privacy Via Machine Learning, and Back\nHelps students achieve both expository knowledge and expertise in the field of data privacy. Focuses on fundamental techniques used in designing privacy-preserving, machine-learning systems in both academia and in the industry. Students are expected to read and understand recent research papers in the topic. (Formerly Computer Science 290P.)\nCredits 5\nInstructor Abhradeep Guha Thakurta\nRequirements Prerequisite(s): CSE 201 and CSE 242 or equivalent. Enrollment is restricted to graduate students.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 290Q Topics in Programming Languages",
        "description": "Current research topics on computer programming languages. Topics vary year to year. Students read papers from current conferences and journals, and present class lectures. A research project is required. (Formerly Computer Science 290Q.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Cormac Flanagan, Lindsey Kuper",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290Q Topics in Programming Languages\nCurrent research topics on computer programming languages. Topics vary year to year. Students read papers from current conferences and journals, and present class lectures. A research project is required. (Formerly Computer Science 290Q.)\nCredits 5\nInstructor Cormac Flanagan, Lindsey Kuper\nRequirements Prerequisite(s): CSE 210A. Enrollment is restricted to graduate students.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 290S Advanced Topics in Computer Systems",
        "description": "Focuses on current research topics in computer systems. Topics vary from year to year depending on the current research of the instructor(s) and the interests of the students. Students read technical papers from current journals and conference proceedings, and present class lectures. A research project is required. (Formerly Computer Science 290S.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Ethan Miller, Darrell Long, Carl Maltzahn, Peter Alvaro, Faisal Nawab, Lindsey Kuper",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 290S Advanced Topics in Computer Systems\nFocuses on current research topics in computer systems. Topics vary from year to year depending on the current research of the instructor(s) and the interests of the students. Students read technical papers from current journals and conference proceedings, and present class lectures. A research project is required. (Formerly Computer Science 290S.)\nCredits 5\nInstructor The Staff, Ethan Miller, Darrell Long, Carl Maltzahn, Peter Alvaro, Faisal Nawab, Lindsey Kuper\nRequirements Prerequisite(s): CSE 231 recommended. Enrollment is restricted to graduate students; qualified undergraduates may enroll with instructor's consent.\nRepeatable For Credit Yes\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 290T Topics in Computing for Society",
        "description": "Current research topics on computer technology that is intentionally targeted to benefiting society. Topics vary year to year. Students read papers from current conferences and journals, and present class lectures. A research project is required. (Formerly Computer Science 290T.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor James Davis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 290T Topics in Computing for Society\nCurrent research topics on computer technology that is intentionally targeted to benefiting society. Topics vary year to year. Students read papers from current conferences and journals, and present class lectures. A research project is required. (Formerly Computer Science 290T.)\nCredits 5\nInstructor James Davis\nRequirements Enrollment is restricted to graduate students.\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 290X Cryptography and Computer Security",
        "description": "Research seminar on encryption and related technologies. Topics include theory of codes, random sequences and generators, public key cryptosystems, private key cyphers, key exchange protocols, quantum computing and cryptography. Major project required. Prerequisite: interview with instructor. (Formerly Computer Science 290X.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Ioannis Demertzis",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 290X Cryptography and Computer Security\nResearch seminar on encryption and related technologies. Topics include theory of codes, random sequences and generators, public key cryptosystems, private key cyphers, key exchange protocols, quantum computing and cryptography. Major project required. Prerequisite: interview with instructor. (Formerly Computer Science 290X.)\nCredits 5\nInstructor Ioannis Demertzis\nRepeatable For Credit Yes\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 293 Advanced Topics in Computer Science & Engineering",
        "description": "A graduate seminar on a research topic in computer engineering which varies according to instructor. Possible topics include, but are not limited to, communication networks, data compression, special-purpose architectures, computer arithmetic, software reliability and reusability, systolic arrays. (Formerly Computer Engineering 293.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff, Ethan Miller, Matthew Guthaus, Scott Beamer",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 293 Advanced Topics in Computer Science & Engineering\nA graduate seminar on a research topic in computer engineering which varies according to instructor. Possible topics include, but are not limited to, communication networks, data compression, special-purpose architectures, computer arithmetic, software reliability and reusability, systolic arrays. (Formerly Computer Engineering 293.)\nCredits 5\nInstructor The Staff, Ethan Miller, Matthew Guthaus, Scott Beamer\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 296 Masters Project",
        "description": "Independent completion of a masters project under faculty supervision. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 296 Masters Project\nIndependent completion of a masters project under faculty supervision. Students submit petition to sponsoring agency.\nCredits 2\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 297A Individual Study or Research",
        "description": "Independent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "CSE 297A Individual Study or Research\nIndependent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.\nCredits 5\nRepeatable For Credit Yes\nQuarter Offered Fall\n"
    },
    {
        "coursename": "CSE 297B Individual Study or Research",
        "description": "Independent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 10",
        "instructor": "none",
        "extrarequirements": "Credits 10",
        "quarteroffered": "Quarter Offered Winter",
        "fulldesc": "CSE 297B Individual Study or Research\nIndependent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.\nCredits 10\nRepeatable For Credit Yes\nQuarter Offered Winter\n"
    },
    {
        "coursename": "CSE 297C Individual Study or Research",
        "description": "Independent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 15",
        "instructor": "none",
        "extrarequirements": "Credits 15",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "CSE 297C Individual Study or Research\nIndependent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.\nCredits 15\nRepeatable For Credit Yes\nQuarter Offered Spring\n"
    },
    {
        "coursename": "CSE 297F Independent Study or Research",
        "description": "Independent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course toward degree requirements.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 297F Independent Study or Research\nIndependent study or research under faculty supervision. Although this course may be repeated for credit, not every degree program will accept a repeated course toward degree requirements.\nCredits 2\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "CSE 299A Thesis Research",
        "description": "Thesis research conducted under faculty supervision. Although the course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "none",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "CSE 299A Thesis Research\nThesis research conducted under faculty supervision. Although the course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.\nCredits 5\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 299B Thesis Research",
        "description": "Thesis research conducted under faculty supervision. Although the course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 10",
        "instructor": "none",
        "extrarequirements": "Credits 10",
        "quarteroffered": "none",
        "fulldesc": "CSE 299B Thesis Research\nThesis research conducted under faculty supervision. Although the course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.\nCredits 10\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 299C Thesis Research",
        "description": "Thesis research conducted under faculty supervision. Although the course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 15",
        "instructor": "none",
        "extrarequirements": "Credits 15",
        "quarteroffered": "none",
        "fulldesc": "CSE 299C Thesis Research\nThesis research conducted under faculty supervision. Although the course may be repeated for credit, not every degree program will accept a repeated course towards degree requirements. Students submit petition to sponsoring agency.\nCredits 15\nRepeatable For Credit Yes\n"
    },
    {
        "coursename": "CSE 299F Thesis Research",
        "description": "Independent study or research under faculty supervision. Enrollment is restricted to graduate students. Recommended for part-time students. Students submit petition to sponsoring agency.",
        "genEd": "none",
        "credithours": "Credits 2",
        "instructor": "none",
        "extrarequirements": "Credits 2",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 299F Thesis Research\nIndependent study or research under faculty supervision. Enrollment is restricted to graduate students. Recommended for part-time students. Students submit petition to sponsoring agency.\nCredits 2\nRepeatable For Credit Yes\nQuarter Offered Fall, Winter, Spring\nCross-listed Courses\n"
    },
    {
        "coursename": "CSE 185E Technical Writing for Computer Science and Engineering",
        "description": "Writing by engineers and computer scientists to technical audiences. Writing exercises include: cover letter and resume for job application, tutorial writing, grant proposal, document specification, literature review, and a final technical report. Two oral presentations are also required, an in-class presentation and a poster presentation. Students also receive instruction in the use of UC library and journal database resources, and in the writing of a statement of purpose for graduate school application. Also offered as CSE 185S. (Formerly Computer Engineering 185, Technical Writing for Computer Engineers.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Gerald Moulds",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter, Spring",
        "fulldesc": "CSE 185E Technical Writing for Computer Science and Engineering\nWriting by engineers and computer scientists to technical audiences. Writing exercises include: cover letter and resume for job application, tutorial writing, grant proposal, document specification, literature review, and a final technical report. Two oral presentations are also required, an in-class presentation and a poster presentation. Students also receive instruction in the use of UC library and journal database resources, and in the writing of a statement of purpose for graduate school application. Also offered as CSE 185S. (Formerly Computer Engineering 185, Technical Writing for Computer Engineers.)\nCredits 5\nCross Listed Courses CSE 185S\nInstructor Gerald Moulds\nRequirements Prerequisite(s): satisfaction of Entry Level Writing and Composition requirements; and CSE 12 or CSE 15 or CSE 30 or BME 160 or by permission of the instructor. Enrollment is restricted to computer engineering, bioengineering, bioinformatics, biomolecular engineering and bioinformatics, or network and digital technology majors.\nQuarter Offered Fall, Winter, Spring\n"
    },
    {
        "coursename": "ECE 253 Introduction to Information Theory",
        "description": "An introduction to information theory including topics such as entropy, relative entropy, mutual information, asymptotic equipartition property, channel capacity, differential entropy, rate distortion theory, and universal source coding. (Formerly EE 253 and CMPS 250.)",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Hamid Sadjadpour, Yu Zhang",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "ECE 253 Introduction to Information Theory\nAn introduction to information theory including topics such as entropy, relative entropy, mutual information, asymptotic equipartition property, channel capacity, differential entropy, rate distortion theory, and universal source coding. (Formerly EE 253 and CMPS 250.)\nCredits 5\nCross Listed Courses CSE 208\nInstructor Hamid Sadjadpour, Yu Zhang\nRequirements Enrollment is restricted to graduate students.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "ECON 166A Game Theory and Applications I",
        "description": "Introduces modern game theory, including applications in social science, biology, and engineering. Topics include extensive form, strategic form, mixed strategies, incomplete information, repeated games, evolutionary games, and simulation techniques.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall, Winter",
        "fulldesc": "ECON 166A Game Theory and Applications I\nIntroduces modern game theory, including applications in social science, biology, and engineering. Topics include extensive form, strategic form, mixed strategies, incomplete information, repeated games, evolutionary games, and simulation techniques.\nCredits 5\nCross Listed Courses CSE 166A\nInstructor The Staff\nRequirements Prerequisite(s): STAT 5 or STAT 7 or ECON 113; and ECON 11B or AM 11B, or MATH 11B or MATH 19B. Enrollment is restricted to juniors and seniors.\nQuarter Offered Fall, Winter\n"
    },
    {
        "coursename": "ECON 166B Game Theory and Applications II",
        "description": "Explores research frontiers in game theory, emphasizing applications in social science, biology, and engineering. Each interdisciplinary team develops a topic, and presents it to the class in oral and written reports and demonstrations. Students must have shown a strong performance in course 166A or equivalent. Students cannot receive credit for this course and ECON 272, CSE 209, or BIOE 274.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "ECON 166B Game Theory and Applications II\nExplores research frontiers in game theory, emphasizing applications in social science, biology, and engineering. Each interdisciplinary team develops a topic, and presents it to the class in oral and written reports and demonstrations. Students must have shown a strong performance in course 166A or equivalent. Students cannot receive credit for this course and ECON 272, CSE 209, or BIOE 274.\nCredits 5\nCross Listed Courses CSE 166B\nInstructor The Staff\nRequirements Prerequisite(s): ECON 166A or CSE 166A; satisfaction of the Entry Level Writing and Composition requirements. Enrollment is restricted to juniors and seniors.\n"
    },
    {
        "coursename": "ECON 272 Evolutionary Game Theory",
        "description": "Reviews static equilibrium concepts, games of incomplete information, and the traditional theory of dynamic games in discrete time. Develops recent evolutionary game models, including replicator and best reply dynamics, and applications to economics, computer science, and biology. Prerequisite(s): upper-division math courses in probability theory are strongly recommended. Cannot receive credit for this course and ECON 166B or CSE 166B.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor The Staff",
        "extrarequirements": "Credits 5",
        "quarteroffered": "none",
        "fulldesc": "ECON 272 Evolutionary Game Theory\nReviews static equilibrium concepts, games of incomplete information, and the traditional theory of dynamic games in discrete time. Develops recent evolutionary game models, including replicator and best reply dynamics, and applications to economics, computer science, and biology. Prerequisite(s): upper-division math courses in probability theory are strongly recommended. Cannot receive credit for this course and ECON 166B or CSE 166B.\nCredits 5\nCross Listed Courses BIOE 274, CSE 209\nInstructor The Staff\n"
    },
    {
        "coursename": "PHYS 150 Quantum Computing",
        "description": "Review of linear algebra. Includes basic concepts in quantum mechanics including quantum states, measurements, operators, entanglement, entanglement entropy, \"no cloning\" theorem, and density matrices; classical gates, reversible computing, and quantum gates; several quantum algorithms including Deutsch's algorithm, Simon's algorithm, Shor's algorithm, and the Grover algorithm; quantum error correction; and quantum key distribution and teleportation.",
        "genEd": "none",
        "credithours": "Credits 5",
        "instructor": "Instructor Peter Young",
        "extrarequirements": "Credits 5",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "PHYS 150 Quantum Computing\nReview of linear algebra. Includes basic concepts in quantum mechanics including quantum states, measurements, operators, entanglement, entanglement entropy, \"no cloning\" theorem, and density matrices; classical gates, reversible computing, and quantum gates; several quantum algorithms including Deutsch's algorithm, Simon's algorithm, Shor's algorithm, and the Grover algorithm; quantum error correction; and quantum key distribution and teleportation.\nCredits 5\nCross Listed Courses CSE 109\nInstructor Peter Young\nRequirements PHYS 116A or MATH 21 or AM 10. Enrollment is restricted to juniors and seniors.\nQuarter Offered Fall\n"
    },
    {
        "coursename": "STAT 266A Data Visualization and Statistical Programming in R",
        "description": "Introduces students to data visualization and statistical programming techniques using the R language. Covers the basics of the language, descriptive statistics, visual analytics, and applied linear regression. Enrollment is by permission of the instructor. (Formerly Applied Math and Statistics 266A and Computer Science 266A.)",
        "genEd": "none",
        "credithours": "Credits 3",
        "instructor": "Instructor The Staff, Suresh Lodha",
        "extrarequirements": "Credits 3",
        "quarteroffered": "Quarter Offered Fall",
        "fulldesc": "STAT 266A Data Visualization and Statistical Programming in R\nIntroduces students to data visualization and statistical programming techniques using the R language. Covers the basics of the language, descriptive statistics, visual analytics, and applied linear regression. Enrollment is by permission of the instructor. (Formerly Applied Math and Statistics 266A and Computer Science 266A.)\nCredits 3\nCross Listed Courses CSE 266A\nInstructor The Staff, Suresh Lodha\nQuarter Offered Fall\n"
    },
    {
        "coursename": "STAT 266B Advanced Statistical Programming in R",
        "description": "Teaches students already familiar with the R language advanced tools such as interactive graphics, interfacing with low-level languages, package construction, debugging, profiling, and parallel computation. (Formerly Applied Math and Statistics 266B and Computer Science 266B.)",
        "genEd": "none",
        "credithours": "Credits 3",
        "instructor": "Instructor Suresh Lodha",
        "extrarequirements": "Credits 3",
        "quarteroffered": "none",
        "fulldesc": "STAT 266B Advanced Statistical Programming in R\nTeaches students already familiar with the R language advanced tools such as interactive graphics, interfacing with low-level languages, package construction, debugging, profiling, and parallel computation. (Formerly Applied Math and Statistics 266B and Computer Science 266B.)\nCredits 3\nCross Listed Courses CSE 266B\nInstructor Suresh Lodha\nRequirements Prerequisite(s): STAT 266A or CSE 266A.\n"
    },
    {
        "coursename": "STAT 266C Introduction to Data Wrangling",
        "description": "Introduces students to concepts and tools associated with data collection, curation, manipulation, and cleaning including an introduction to relational databases and SQL, regular expressions, API usage, and web scraping using Python. (Formerly Applied Math and Statistics 266C and Computer Science 266C.)",
        "genEd": "none",
        "credithours": "Credits 3",
        "instructor": "Instructor Suresh Lodha",
        "extrarequirements": "Credits 3",
        "quarteroffered": "Quarter Offered Spring",
        "fulldesc": "STAT 266C Introduction to Data Wrangling\nIntroduces students to concepts and tools associated with data collection, curation, manipulation, and cleaning including an introduction to relational databases and SQL, regular expressions, API usage, and web scraping using Python. (Formerly Applied Math and Statistics 266C and Computer Science 266C.)\nCredits 3\nCross Listed Courses CSE 266C\nInstructor Suresh Lodha\nRequirements Prerequisite(s): STAT 266A or CSE 266A.\nQuarter Offered Spring\n"
    }
]